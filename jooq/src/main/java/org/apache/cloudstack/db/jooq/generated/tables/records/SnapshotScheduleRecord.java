/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "snapshot_schedule", schema = "cloud", uniqueConstraints = {
	@javax.persistence.UniqueConstraint(columnNames = {"volume_id", "policy_id"})
})
public class SnapshotScheduleRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.generated.tables.records.SnapshotScheduleRecord> implements org.jooq.Record7<java.lang.Long, java.lang.String, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.lang.Long, java.lang.Long> {

	private static final long serialVersionUID = 1528984343;

	/**
	 * Setter for <code>cloud.snapshot_schedule.id</code>. 
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.snapshot_schedule.uuid</code>. 
	 */
	public void setUuid(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", unique = true, length = 40)
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.snapshot_schedule.volume_id</code>. The volume for which this snapshot is being taken
	 */
	public void setVolumeId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.volume_id</code>. The volume for which this snapshot is being taken
	 */
	@javax.persistence.Column(name = "volume_id", nullable = false, precision = 20)
	public java.lang.Long getVolumeId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>cloud.snapshot_schedule.policy_id</code>. One of the policyIds for which this snapshot was taken
	 */
	public void setPolicyId(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.policy_id</code>. One of the policyIds for which this snapshot was taken
	 */
	@javax.persistence.Column(name = "policy_id", nullable = false, precision = 20)
	public java.lang.Long getPolicyId() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>cloud.snapshot_schedule.scheduled_timestamp</code>. Time at which the snapshot was scheduled for execution
	 */
	public void setScheduledTimestamp(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.scheduled_timestamp</code>. Time at which the snapshot was scheduled for execution
	 */
	@javax.persistence.Column(name = "scheduled_timestamp", nullable = false)
	public java.sql.Timestamp getScheduledTimestamp() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>cloud.snapshot_schedule.async_job_id</code>. If this schedule is being executed, it is the id of the create aysnc_job. Before that it is null
	 */
	public void setAsyncJobId(java.lang.Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.async_job_id</code>. If this schedule is being executed, it is the id of the create aysnc_job. Before that it is null
	 */
	@javax.persistence.Column(name = "async_job_id", precision = 20)
	public java.lang.Long getAsyncJobId() {
		return (java.lang.Long) getValue(5);
	}

	/**
	 * Setter for <code>cloud.snapshot_schedule.snapshot_id</code>. If this schedule is being executed, then the corresponding snapshot has this id. Before that it is null
	 */
	public void setSnapshotId(java.lang.Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_schedule.snapshot_id</code>. If this schedule is being executed, then the corresponding snapshot has this id. Before that it is null
	 */
	@javax.persistence.Column(name = "snapshot_id", precision = 20)
	public java.lang.Long getSnapshotId() {
		return (java.lang.Long) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Long, java.lang.String, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Long, java.lang.String, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.VOLUME_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.POLICY_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.SCHEDULED_TIMESTAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field6() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.ASYNC_JOB_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field7() {
		return org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE.SNAPSHOT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getVolumeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getPolicyId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getScheduledTimestamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value6() {
		return getAsyncJobId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value7() {
		return getSnapshotId();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SnapshotScheduleRecord
	 */
	public SnapshotScheduleRecord() {
		super(org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE);
	}

	/**
	 * Create a detached, initialised SnapshotScheduleRecord
	 */
	public SnapshotScheduleRecord(java.lang.Long id, java.lang.String uuid, java.lang.Long volumeId, java.lang.Long policyId, java.sql.Timestamp scheduledTimestamp, java.lang.Long asyncJobId, java.lang.Long snapshotId) {
		super(org.apache.cloudstack.db.jooq.generated.tables.SnapshotSchedule.SNAPSHOT_SCHEDULE);

		setValue(0, id);
		setValue(1, uuid);
		setValue(2, volumeId);
		setValue(3, policyId);
		setValue(4, scheduledTimestamp);
		setValue(5, asyncJobId);
		setValue(6, snapshotId);
	}
}
