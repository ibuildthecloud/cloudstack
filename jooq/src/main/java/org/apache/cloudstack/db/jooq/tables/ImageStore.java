/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageStore extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord> {

	private static final long serialVersionUID = -791205253;

	/**
	 * The singleton instance of <code>cloud.image_store</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.ImageStore IMAGE_STORE = new org.apache.cloudstack.db.jooq.tables.ImageStore();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord.class;
	}

	/**
	 * The column <code>cloud.image_store.id</code>. id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.image_store.name</code>. name of data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.image_store.image_provider_name</code>. id of image_store_provider
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> IMAGE_PROVIDER_NAME = createField("image_provider_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.image_store.protocol</code>. protocol of data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> PROTOCOL = createField("protocol", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.image_store.url</code>. url for image data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.image_store.data_center_id</code>. datacenter id of data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.Long> DATA_CENTER_ID = createField("data_center_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.image_store.scope</code>. scope of data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> SCOPE = createField("scope", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.image_store.role</code>. role of data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.image_store.uuid</code>. uuid of data store
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.image_store.parent</code>. parent path for the storage server
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.String> PARENT = createField("parent", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.image_store.created</code>. date the image store first signed on
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.image_store.removed</code>. date removed if not null
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.image_store.total_size</code>. storage total size statistics
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.Long> TOTAL_SIZE = createField("total_size", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.image_store.used_bytes</code>. storage available bytes statistics
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.Long> USED_BYTES = createField("used_bytes", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>cloud.image_store</code> table reference
	 */
	public ImageStore() {
		super("image_store", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.image_store</code> table reference
	 */
	public ImageStore(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.ImageStore.IMAGE_STORE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_IMAGE_STORE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_IMAGE_STORE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ImageStoreRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_IMAGE_STORE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.ImageStore as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.ImageStore(alias);
	}
}
