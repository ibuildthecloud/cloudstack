/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 *
 * VIEW
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceOfferingView extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord> {

	private static final long serialVersionUID = -15933331;

	/**
	 * The singleton instance of <code>cloud.service_offering_view</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.ServiceOfferingView SERVICE_OFFERING_VIEW = new org.apache.cloudstack.db.jooq.tables.ServiceOfferingView();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord.class;
	}

	/**
	 * The column <code>cloud.service_offering_view.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.service_offering_view.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.service_offering_view.name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.service_offering_view.display_text</code>. Descrianaption text set by the admin for display purpose only
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> DISPLAY_TEXT = createField("display_text", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this);

	/**
	 * The column <code>cloud.service_offering_view.created</code>. date the disk offering was created
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.service_offering_view.tags</code>. comma separated tags about the disk_offering
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this);

	/**
	 * The column <code>cloud.service_offering_view.removed</code>. date removed
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.service_offering_view.use_local_storage</code>. Indicates whether local storage pools should be used
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Byte> USE_LOCAL_STORAGE = createField("use_local_storage", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.system_use</code>. is this offering for system used only
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Byte> SYSTEM_USE = createField("system_use", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.bytes_read_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> BYTES_READ_RATE = createField("bytes_read_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.service_offering_view.bytes_write_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> BYTES_WRITE_RATE = createField("bytes_write_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.service_offering_view.iops_read_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> IOPS_READ_RATE = createField("iops_read_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.service_offering_view.iops_write_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> IOPS_WRITE_RATE = createField("iops_write_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.service_offering_view.cpu</code>. # of cores
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Integer> CPU = createField("cpu", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this);

	/**
	 * The column <code>cloud.service_offering_view.speed</code>. speed per core in mhz
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Integer> SPEED = createField("speed", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this);

	/**
	 * The column <code>cloud.service_offering_view.ram_size</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> RAM_SIZE = createField("ram_size", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.service_offering_view.nw_rate</code>. network rate throttle mbits/s
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Short> NW_RATE = createField("nw_rate", org.jooq.impl.SQLDataType.SMALLINT.defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.mc_rate</code>. mcast rate throttle mbits/s
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Short> MC_RATE = createField("mc_rate", org.jooq.impl.SQLDataType.SMALLINT.defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.ha_enabled</code>. Enable HA
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Byte> HA_ENABLED = createField("ha_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.limit_cpu_use</code>. Limit the CPU usage to service offering
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Byte> LIMIT_CPU_USE = createField("limit_cpu_use", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.host_tag</code>. host tag specified by the service_offering
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> HOST_TAG = createField("host_tag", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.service_offering_view.default_use</code>. is this offering a default system offering
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Byte> DEFAULT_USE = createField("default_use", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.vm_type</code>. type of offering specified for system offerings
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> VM_TYPE = createField("vm_type", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.service_offering_view.sort_key</code>. sort key used for customising sort method
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Integer> SORT_KEY = createField("sort_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.is_volatile</code>. true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Byte> IS_VOLATILE = createField("is_volatile", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.deployment_planner</code>. Planner heuristics used to deploy a VM of this offering; if null global config vm.deployment.planner is used
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> DEPLOYMENT_PLANNER = createField("deployment_planner", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.service_offering_view.domain_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.Long> DOMAIN_ID = createField("domain_id", org.jooq.impl.SQLDataType.BIGINT.defaulted(true), this);

	/**
	 * The column <code>cloud.service_offering_view.domain_uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> DOMAIN_UUID = createField("domain_uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.service_offering_view.domain_name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> DOMAIN_NAME = createField("domain_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.service_offering_view.domain_path</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ServiceOfferingViewRecord, java.lang.String> DOMAIN_PATH = createField("domain_path", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * Create a <code>cloud.service_offering_view</code> table reference
	 */
	public ServiceOfferingView() {
		super("service_offering_view", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.service_offering_view</code> table reference
	 */
	public ServiceOfferingView(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.ServiceOfferingView.SERVICE_OFFERING_VIEW);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.ServiceOfferingView as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.ServiceOfferingView(alias);
	}
}
