/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "nicira_nvp_nic_map", schema = "cloud")
public class NiciraNvpNicMapRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.generated.tables.records.NiciraNvpNicMapRecord> implements org.jooq.Record4<java.lang.Long, java.lang.String, java.lang.String, java.lang.String> {

	private static final long serialVersionUID = 392586436;

	/**
	 * Setter for <code>cloud.nicira_nvp_nic_map.id</code>. id
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.nicira_nvp_nic_map.id</code>. id
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.nicira_nvp_nic_map.logicalswitch</code>. nicira uuid of logical switch this port is provisioned on
	 */
	public void setLogicalswitch(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.nicira_nvp_nic_map.logicalswitch</code>. nicira uuid of logical switch this port is provisioned on
	 */
	@javax.persistence.Column(name = "logicalswitch", nullable = false, length = 255)
	public java.lang.String getLogicalswitch() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.nicira_nvp_nic_map.logicalswitchport</code>. nicira uuid of this logical switch port
	 */
	public void setLogicalswitchport(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.nicira_nvp_nic_map.logicalswitchport</code>. nicira uuid of this logical switch port
	 */
	@javax.persistence.Column(name = "logicalswitchport", unique = true, length = 255)
	public java.lang.String getLogicalswitchport() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>cloud.nicira_nvp_nic_map.nic</code>. cloudstack uuid of the nic connected to this logical switch port
	 */
	public void setNic(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.nicira_nvp_nic_map.nic</code>. cloudstack uuid of the nic connected to this logical switch port
	 */
	@javax.persistence.Column(name = "nic", unique = true, length = 255)
	public java.lang.String getNic() {
		return (java.lang.String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Long, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Long, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.generated.tables.NiciraNvpNicMap.NICIRA_NVP_NIC_MAP.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.generated.tables.NiciraNvpNicMap.NICIRA_NVP_NIC_MAP.LOGICALSWITCH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.apache.cloudstack.db.jooq.generated.tables.NiciraNvpNicMap.NICIRA_NVP_NIC_MAP.LOGICALSWITCHPORT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.apache.cloudstack.db.jooq.generated.tables.NiciraNvpNicMap.NICIRA_NVP_NIC_MAP.NIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getLogicalswitch();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getLogicalswitchport();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getNic();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NiciraNvpNicMapRecord
	 */
	public NiciraNvpNicMapRecord() {
		super(org.apache.cloudstack.db.jooq.generated.tables.NiciraNvpNicMap.NICIRA_NVP_NIC_MAP);
	}

	/**
	 * Create a detached, initialised NiciraNvpNicMapRecord
	 */
	public NiciraNvpNicMapRecord(java.lang.Long id, java.lang.String logicalswitch, java.lang.String logicalswitchport, java.lang.String nic) {
		super(org.apache.cloudstack.db.jooq.generated.tables.NiciraNvpNicMap.NICIRA_NVP_NIC_MAP);

		setValue(0, id);
		setValue(1, logicalswitch);
		setValue(2, logicalswitchport);
		setValue(3, nic);
	}
}
