/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "volumes", schema = "cloud")
public class VolumesRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.tables.records.VolumesRecord> {

	private static final long serialVersionUID = 1337180050;

	/**
	 * Setter for <code>cloud.volumes.id</code>. Primary Key
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.volumes.id</code>. Primary Key
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.volumes.account_id</code>. owner.  foreign key to account table
	 */
	public void setAccountId(java.lang.Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.volumes.account_id</code>. owner.  foreign key to account table
	 */
	@javax.persistence.Column(name = "account_id", nullable = false, precision = 20)
	public java.lang.Long getAccountId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>cloud.volumes.domain_id</code>. the domain that the owner belongs to
	 */
	public void setDomainId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.volumes.domain_id</code>. the domain that the owner belongs to
	 */
	@javax.persistence.Column(name = "domain_id", nullable = false, precision = 20)
	public java.lang.Long getDomainId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>cloud.volumes.pool_id</code>. pool it belongs to. foreign key to storage_pool table
	 */
	public void setPoolId(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.volumes.pool_id</code>. pool it belongs to. foreign key to storage_pool table
	 */
	@javax.persistence.Column(name = "pool_id", precision = 20)
	public java.lang.Long getPoolId() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>cloud.volumes.last_pool_id</code>. last pool it belongs to.
	 */
	public void setLastPoolId(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.volumes.last_pool_id</code>. last pool it belongs to.
	 */
	@javax.persistence.Column(name = "last_pool_id", precision = 20)
	public java.lang.Long getLastPoolId() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>cloud.volumes.instance_id</code>. vm instance it belongs to. foreign key to vm_instance table
	 */
	public void setInstanceId(java.lang.Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.volumes.instance_id</code>. vm instance it belongs to. foreign key to vm_instance table
	 */
	@javax.persistence.Column(name = "instance_id", precision = 20)
	public java.lang.Long getInstanceId() {
		return (java.lang.Long) getValue(5);
	}

	/**
	 * Setter for <code>cloud.volumes.device_id</code>. which device inside vm instance it is 
	 */
	public void setDeviceId(java.lang.Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.volumes.device_id</code>. which device inside vm instance it is 
	 */
	@javax.persistence.Column(name = "device_id", precision = 20)
	public java.lang.Long getDeviceId() {
		return (java.lang.Long) getValue(6);
	}

	/**
	 * Setter for <code>cloud.volumes.name</code>. A user specified name for the volume
	 */
	public void setName(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cloud.volumes.name</code>. A user specified name for the volume
	 */
	@javax.persistence.Column(name = "name", length = 255)
	public java.lang.String getName() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>cloud.volumes.uuid</code>. 
	 */
	public void setUuid(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cloud.volumes.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", unique = true, length = 40)
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>cloud.volumes.size</code>. total size
	 */
	public void setSize(java.lang.Long value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cloud.volumes.size</code>. total size
	 */
	@javax.persistence.Column(name = "size", nullable = false, precision = 20)
	public java.lang.Long getSize() {
		return (java.lang.Long) getValue(9);
	}

	/**
	 * Setter for <code>cloud.volumes.folder</code>. The folder where the volume is saved
	 */
	public void setFolder(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cloud.volumes.folder</code>. The folder where the volume is saved
	 */
	@javax.persistence.Column(name = "folder", length = 255)
	public java.lang.String getFolder() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>cloud.volumes.path</code>. Path
	 */
	public void setPath(java.lang.String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cloud.volumes.path</code>. Path
	 */
	@javax.persistence.Column(name = "path", length = 255)
	public java.lang.String getPath() {
		return (java.lang.String) getValue(11);
	}

	/**
	 * Setter for <code>cloud.volumes.pod_id</code>. pod this volume belongs to
	 */
	public void setPodId(java.lang.Long value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>cloud.volumes.pod_id</code>. pod this volume belongs to
	 */
	@javax.persistence.Column(name = "pod_id", precision = 20)
	public java.lang.Long getPodId() {
		return (java.lang.Long) getValue(12);
	}

	/**
	 * Setter for <code>cloud.volumes.data_center_id</code>. data center this volume belongs to
	 */
	public void setDataCenterId(java.lang.Long value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>cloud.volumes.data_center_id</code>. data center this volume belongs to
	 */
	@javax.persistence.Column(name = "data_center_id", nullable = false, precision = 20)
	public java.lang.Long getDataCenterId() {
		return (java.lang.Long) getValue(13);
	}

	/**
	 * Setter for <code>cloud.volumes.iscsi_name</code>. iscsi target name
	 */
	public void setIscsiName(java.lang.String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>cloud.volumes.iscsi_name</code>. iscsi target name
	 */
	@javax.persistence.Column(name = "iscsi_name", length = 255)
	public java.lang.String getIscsiName() {
		return (java.lang.String) getValue(14);
	}

	/**
	 * Setter for <code>cloud.volumes.host_ip</code>. host ip address for convenience
	 */
	public void setHostIp(java.lang.String value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>cloud.volumes.host_ip</code>. host ip address for convenience
	 */
	@javax.persistence.Column(name = "host_ip", length = 40)
	public java.lang.String getHostIp() {
		return (java.lang.String) getValue(15);
	}

	/**
	 * Setter for <code>cloud.volumes.volume_type</code>. root, swap or data
	 */
	public void setVolumeType(java.lang.String value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>cloud.volumes.volume_type</code>. root, swap or data
	 */
	@javax.persistence.Column(name = "volume_type", nullable = false, length = 64)
	public java.lang.String getVolumeType() {
		return (java.lang.String) getValue(16);
	}

	/**
	 * Setter for <code>cloud.volumes.pool_type</code>. type of the pool
	 */
	public void setPoolType(java.lang.String value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>cloud.volumes.pool_type</code>. type of the pool
	 */
	@javax.persistence.Column(name = "pool_type", length = 64)
	public java.lang.String getPoolType() {
		return (java.lang.String) getValue(17);
	}

	/**
	 * Setter for <code>cloud.volumes.disk_offering_id</code>. can be null for system VMs
	 */
	public void setDiskOfferingId(java.lang.Long value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>cloud.volumes.disk_offering_id</code>. can be null for system VMs
	 */
	@javax.persistence.Column(name = "disk_offering_id", nullable = false, precision = 20)
	public java.lang.Long getDiskOfferingId() {
		return (java.lang.Long) getValue(18);
	}

	/**
	 * Setter for <code>cloud.volumes.template_id</code>. fk to vm_template.id
	 */
	public void setTemplateId(java.lang.Long value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>cloud.volumes.template_id</code>. fk to vm_template.id
	 */
	@javax.persistence.Column(name = "template_id", precision = 20)
	public java.lang.Long getTemplateId() {
		return (java.lang.Long) getValue(19);
	}

	/**
	 * Setter for <code>cloud.volumes.first_snapshot_backup_uuid</code>. The first snapshot that was ever taken for this volume
	 */
	public void setFirstSnapshotBackupUuid(java.lang.String value) {
		setValue(20, value);
	}

	/**
	 * Getter for <code>cloud.volumes.first_snapshot_backup_uuid</code>. The first snapshot that was ever taken for this volume
	 */
	@javax.persistence.Column(name = "first_snapshot_backup_uuid", length = 255)
	public java.lang.String getFirstSnapshotBackupUuid() {
		return (java.lang.String) getValue(20);
	}

	/**
	 * Setter for <code>cloud.volumes.recreatable</code>. Is this volume recreatable?
	 */
	public void setRecreatable(java.lang.Byte value) {
		setValue(21, value);
	}

	/**
	 * Getter for <code>cloud.volumes.recreatable</code>. Is this volume recreatable?
	 */
	@javax.persistence.Column(name = "recreatable", nullable = false, precision = 3)
	public java.lang.Byte getRecreatable() {
		return (java.lang.Byte) getValue(21);
	}

	/**
	 * Setter for <code>cloud.volumes.created</code>. Date Created
	 */
	public void setCreated(java.sql.Timestamp value) {
		setValue(22, value);
	}

	/**
	 * Getter for <code>cloud.volumes.created</code>. Date Created
	 */
	@javax.persistence.Column(name = "created")
	public java.sql.Timestamp getCreated() {
		return (java.sql.Timestamp) getValue(22);
	}

	/**
	 * Setter for <code>cloud.volumes.attached</code>. Date Attached
	 */
	public void setAttached(java.sql.Timestamp value) {
		setValue(23, value);
	}

	/**
	 * Getter for <code>cloud.volumes.attached</code>. Date Attached
	 */
	@javax.persistence.Column(name = "attached")
	public java.sql.Timestamp getAttached() {
		return (java.sql.Timestamp) getValue(23);
	}

	/**
	 * Setter for <code>cloud.volumes.updated</code>. Date updated for attach/detach
	 */
	public void setUpdated(java.sql.Timestamp value) {
		setValue(24, value);
	}

	/**
	 * Getter for <code>cloud.volumes.updated</code>. Date updated for attach/detach
	 */
	@javax.persistence.Column(name = "updated")
	public java.sql.Timestamp getUpdated() {
		return (java.sql.Timestamp) getValue(24);
	}

	/**
	 * Setter for <code>cloud.volumes.removed</code>. Date removed.  not null if removed
	 */
	public void setRemoved(java.sql.Timestamp value) {
		setValue(25, value);
	}

	/**
	 * Getter for <code>cloud.volumes.removed</code>. Date removed.  not null if removed
	 */
	@javax.persistence.Column(name = "removed")
	public java.sql.Timestamp getRemoved() {
		return (java.sql.Timestamp) getValue(25);
	}

	/**
	 * Setter for <code>cloud.volumes.state</code>. State machine
	 */
	public void setState(java.lang.String value) {
		setValue(26, value);
	}

	/**
	 * Getter for <code>cloud.volumes.state</code>. State machine
	 */
	@javax.persistence.Column(name = "state", length = 32)
	public java.lang.String getState() {
		return (java.lang.String) getValue(26);
	}

	/**
	 * Setter for <code>cloud.volumes.chain_info</code>. save possible disk chain info in primary storage
	 */
	public void setChainInfo(java.lang.String value) {
		setValue(27, value);
	}

	/**
	 * Getter for <code>cloud.volumes.chain_info</code>. save possible disk chain info in primary storage
	 */
	@javax.persistence.Column(name = "chain_info", length = 65535)
	public java.lang.String getChainInfo() {
		return (java.lang.String) getValue(27);
	}

	/**
	 * Setter for <code>cloud.volumes.update_count</code>. date state was updated
	 */
	public void setUpdateCount(java.lang.Long value) {
		setValue(28, value);
	}

	/**
	 * Getter for <code>cloud.volumes.update_count</code>. date state was updated
	 */
	@javax.persistence.Column(name = "update_count", nullable = false, precision = 20)
	public java.lang.Long getUpdateCount() {
		return (java.lang.Long) getValue(28);
	}

	/**
	 * Setter for <code>cloud.volumes.disk_type</code>. 
	 */
	public void setDiskType(java.lang.String value) {
		setValue(29, value);
	}

	/**
	 * Getter for <code>cloud.volumes.disk_type</code>. 
	 */
	@javax.persistence.Column(name = "disk_type", length = 255)
	public java.lang.String getDiskType() {
		return (java.lang.String) getValue(29);
	}

	/**
	 * Setter for <code>cloud.volumes.vm_snapshot_chain_size</code>. 
	 */
	public void setVmSnapshotChainSize(java.lang.Long value) {
		setValue(30, value);
	}

	/**
	 * Getter for <code>cloud.volumes.vm_snapshot_chain_size</code>. 
	 */
	@javax.persistence.Column(name = "vm_snapshot_chain_size", precision = 20)
	public java.lang.Long getVmSnapshotChainSize() {
		return (java.lang.Long) getValue(30);
	}

	/**
	 * Setter for <code>cloud.volumes.iso_id</code>. 
	 */
	public void setIsoId(java.lang.Long value) {
		setValue(31, value);
	}

	/**
	 * Getter for <code>cloud.volumes.iso_id</code>. 
	 */
	@javax.persistence.Column(name = "iso_id", precision = 20)
	public java.lang.Long getIsoId() {
		return (java.lang.Long) getValue(31);
	}

	/**
	 * Setter for <code>cloud.volumes.display_volume</code>. Should volume be displayed to the end user
	 */
	public void setDisplayVolume(java.lang.Byte value) {
		setValue(32, value);
	}

	/**
	 * Getter for <code>cloud.volumes.display_volume</code>. Should volume be displayed to the end user
	 */
	@javax.persistence.Column(name = "display_volume", nullable = false, precision = 3)
	public java.lang.Byte getDisplayVolume() {
		return (java.lang.Byte) getValue(32);
	}

	/**
	 * Setter for <code>cloud.volumes.format</code>. volume format
	 */
	public void setFormat(java.lang.String value) {
		setValue(33, value);
	}

	/**
	 * Getter for <code>cloud.volumes.format</code>. volume format
	 */
	@javax.persistence.Column(name = "format", length = 255)
	public java.lang.String getFormat() {
		return (java.lang.String) getValue(33);
	}

	/**
	 * Setter for <code>cloud.volumes.min_iops</code>. Minimum IOPS
	 */
	public void setMinIops(java.lang.Long value) {
		setValue(34, value);
	}

	/**
	 * Getter for <code>cloud.volumes.min_iops</code>. Minimum IOPS
	 */
	@javax.persistence.Column(name = "min_iops", precision = 20)
	public java.lang.Long getMinIops() {
		return (java.lang.Long) getValue(34);
	}

	/**
	 * Setter for <code>cloud.volumes.max_iops</code>. Maximum IOPS
	 */
	public void setMaxIops(java.lang.Long value) {
		setValue(35, value);
	}

	/**
	 * Getter for <code>cloud.volumes.max_iops</code>. Maximum IOPS
	 */
	@javax.persistence.Column(name = "max_iops", precision = 20)
	public java.lang.Long getMaxIops() {
		return (java.lang.Long) getValue(35);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached VolumesRecord
	 */
	public VolumesRecord() {
		super(org.apache.cloudstack.db.jooq.tables.Volumes.VOLUMES);
	}

	/**
	 * Create a detached, initialised VolumesRecord
	 */
	public VolumesRecord(java.lang.Long id, java.lang.Long accountId, java.lang.Long domainId, java.lang.Long poolId, java.lang.Long lastPoolId, java.lang.Long instanceId, java.lang.Long deviceId, java.lang.String name, java.lang.String uuid, java.lang.Long size, java.lang.String folder, java.lang.String path, java.lang.Long podId, java.lang.Long dataCenterId, java.lang.String iscsiName, java.lang.String hostIp, java.lang.String volumeType, java.lang.String poolType, java.lang.Long diskOfferingId, java.lang.Long templateId, java.lang.String firstSnapshotBackupUuid, java.lang.Byte recreatable, java.sql.Timestamp created, java.sql.Timestamp attached, java.sql.Timestamp updated, java.sql.Timestamp removed, java.lang.String state, java.lang.String chainInfo, java.lang.Long updateCount, java.lang.String diskType, java.lang.Long vmSnapshotChainSize, java.lang.Long isoId, java.lang.Byte displayVolume, java.lang.String format, java.lang.Long minIops, java.lang.Long maxIops) {
		super(org.apache.cloudstack.db.jooq.tables.Volumes.VOLUMES);

		setValue(0, id);
		setValue(1, accountId);
		setValue(2, domainId);
		setValue(3, poolId);
		setValue(4, lastPoolId);
		setValue(5, instanceId);
		setValue(6, deviceId);
		setValue(7, name);
		setValue(8, uuid);
		setValue(9, size);
		setValue(10, folder);
		setValue(11, path);
		setValue(12, podId);
		setValue(13, dataCenterId);
		setValue(14, iscsiName);
		setValue(15, hostIp);
		setValue(16, volumeType);
		setValue(17, poolType);
		setValue(18, diskOfferingId);
		setValue(19, templateId);
		setValue(20, firstSnapshotBackupUuid);
		setValue(21, recreatable);
		setValue(22, created);
		setValue(23, attached);
		setValue(24, updated);
		setValue(25, removed);
		setValue(26, state);
		setValue(27, chainInfo);
		setValue(28, updateCount);
		setValue(29, diskType);
		setValue(30, vmSnapshotChainSize);
		setValue(31, isoId);
		setValue(32, displayVolume);
		setValue(33, format);
		setValue(34, minIops);
		setValue(35, maxIops);
	}
}
