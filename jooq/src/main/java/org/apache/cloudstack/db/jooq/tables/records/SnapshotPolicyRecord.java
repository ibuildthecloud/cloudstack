/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "snapshot_policy", schema = "cloud")
public class SnapshotPolicyRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.tables.records.SnapshotPolicyRecord> implements org.jooq.Record8<java.lang.Long, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Byte> {

	private static final long serialVersionUID = -892514331;

	/**
	 * Setter for <code>cloud.snapshot_policy.id</code>. 
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.uuid</code>. 
	 */
	public void setUuid(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", unique = true, length = 40)
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.volume_id</code>. 
	 */
	public void setVolumeId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.volume_id</code>. 
	 */
	@javax.persistence.Column(name = "volume_id", nullable = false, precision = 20)
	public java.lang.Long getVolumeId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.schedule</code>. schedule time of execution
	 */
	public void setSchedule(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.schedule</code>. schedule time of execution
	 */
	@javax.persistence.Column(name = "schedule", nullable = false, length = 100)
	public java.lang.String getSchedule() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.timezone</code>. the timezone in which the schedule time is specified
	 */
	public void setTimezone(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.timezone</code>. the timezone in which the schedule time is specified
	 */
	@javax.persistence.Column(name = "timezone", nullable = false, length = 100)
	public java.lang.String getTimezone() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.interval</code>. backup schedule, e.g. hourly, daily, etc.
	 */
	public void setInterval(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.interval</code>. backup schedule, e.g. hourly, daily, etc.
	 */
	@javax.persistence.Column(name = "interval", nullable = false, precision = 10)
	public java.lang.Integer getInterval() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.max_snaps</code>. maximum number of snapshots to maintain
	 */
	public void setMaxSnaps(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.max_snaps</code>. maximum number of snapshots to maintain
	 */
	@javax.persistence.Column(name = "max_snaps", nullable = false, precision = 10)
	public java.lang.Integer getMaxSnaps() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>cloud.snapshot_policy.active</code>. Is the policy active
	 */
	public void setActive(java.lang.Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cloud.snapshot_policy.active</code>. Is the policy active
	 */
	@javax.persistence.Column(name = "active", nullable = false, precision = 3)
	public java.lang.Byte getActive() {
		return (java.lang.Byte) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Long, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Byte> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Long, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Byte> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.VOLUME_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.SCHEDULE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.TIMEZONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.INTERVAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.MAX_SNAPS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field8() {
		return org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getVolumeId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getSchedule();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getTimezone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getInterval();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getMaxSnaps();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value8() {
		return getActive();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SnapshotPolicyRecord
	 */
	public SnapshotPolicyRecord() {
		super(org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY);
	}

	/**
	 * Create a detached, initialised SnapshotPolicyRecord
	 */
	public SnapshotPolicyRecord(java.lang.Long id, java.lang.String uuid, java.lang.Long volumeId, java.lang.String schedule, java.lang.String timezone, java.lang.Integer interval, java.lang.Integer maxSnaps, java.lang.Byte active) {
		super(org.apache.cloudstack.db.jooq.tables.SnapshotPolicy.SNAPSHOT_POLICY);

		setValue(0, id);
		setValue(1, uuid);
		setValue(2, volumeId);
		setValue(3, schedule);
		setValue(4, timezone);
		setValue(5, interval);
		setValue(6, maxSnaps);
		setValue(7, active);
	}
}
