/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "keystore", schema = "cloud")
public class KeystoreRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord> implements org.jooq.Record6<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer> {

	private static final long serialVersionUID = 254396851;

	/**
	 * Setter for <code>cloud.keystore.id</code>. id
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.keystore.id</code>. id
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.keystore.name</code>. unique name for the certifiation
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.keystore.name</code>. unique name for the certifiation
	 */
	@javax.persistence.Column(name = "name", unique = true, nullable = false, length = 64)
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.keystore.certificate</code>. the actual certificate being stored in the db
	 */
	public void setCertificate(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.keystore.certificate</code>. the actual certificate being stored in the db
	 */
	@javax.persistence.Column(name = "certificate", nullable = false, length = 65535)
	public java.lang.String getCertificate() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>cloud.keystore.key</code>. private key associated wih the certificate
	 */
	public void setKey(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.keystore.key</code>. private key associated wih the certificate
	 */
	@javax.persistence.Column(name = "key", length = 65535)
	public java.lang.String getKey() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>cloud.keystore.domain_suffix</code>. DNS domain suffix associated with the certificate
	 */
	public void setDomainSuffix(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.keystore.domain_suffix</code>. DNS domain suffix associated with the certificate
	 */
	@javax.persistence.Column(name = "domain_suffix", nullable = false, length = 256)
	public java.lang.String getDomainSuffix() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>cloud.keystore.seq</code>. 
	 */
	public void setSeq(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.keystore.seq</code>. 
	 */
	@javax.persistence.Column(name = "seq", precision = 10)
	public java.lang.Integer getSeq() {
		return (java.lang.Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE.CERTIFICATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE.KEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE.DOMAIN_SUFFIX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE.SEQ;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getCertificate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getKey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getDomainSuffix();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getSeq();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached KeystoreRecord
	 */
	public KeystoreRecord() {
		super(org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE);
	}

	/**
	 * Create a detached, initialised KeystoreRecord
	 */
	public KeystoreRecord(java.lang.Long id, java.lang.String name, java.lang.String certificate, java.lang.String key, java.lang.String domainSuffix, java.lang.Integer seq) {
		super(org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE);

		setValue(0, id);
		setValue(1, name);
		setValue(2, certificate);
		setValue(3, key);
		setValue(4, domainSuffix);
		setValue(5, seq);
	}
}
