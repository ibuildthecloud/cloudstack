/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables;

/**
 * This class is generated by jOOQ.
 *
 * VIEW
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiskOfferingView extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord> {

	private static final long serialVersionUID = -1061772358;

	/**
	 * The singleton instance of <code>cloud.disk_offering_view</code>
	 */
	public static final org.apache.cloudstack.db.jooq.generated.tables.DiskOfferingView DISK_OFFERING_VIEW = new org.apache.cloudstack.db.jooq.generated.tables.DiskOfferingView();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord.class;
	}

	/**
	 * The column <code>cloud.disk_offering_view.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.disk_offering_view.name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.disk_offering_view.display_text</code>. Descrianaption text set by the admin for display purpose only
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> DISPLAY_TEXT = createField("display_text", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this);

	/**
	 * The column <code>cloud.disk_offering_view.disk_size</code>. disk space in byte
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> DISK_SIZE = createField("disk_size", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.disk_offering_view.min_iops</code>. Minimum IOPS
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> MIN_IOPS = createField("min_iops", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.max_iops</code>. Maximum IOPS
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> MAX_IOPS = createField("max_iops", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.created</code>. date the disk offering was created
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.disk_offering_view.tags</code>. comma separated tags about the disk_offering
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this);

	/**
	 * The column <code>cloud.disk_offering_view.customized</code>. 0 implies not customized by default
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Byte> CUSTOMIZED = createField("customized", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.customized_iops</code>. Should customized IOPS be displayed to the end user
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Byte> CUSTOMIZED_IOPS = createField("customized_iops", org.jooq.impl.SQLDataType.TINYINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.removed</code>. date removed
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.disk_offering_view.use_local_storage</code>. Indicates whether local storage pools should be used
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Byte> USE_LOCAL_STORAGE = createField("use_local_storage", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.system_use</code>. is this offering for system used only
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Byte> SYSTEM_USE = createField("system_use", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.bytes_read_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> BYTES_READ_RATE = createField("bytes_read_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.bytes_write_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> BYTES_WRITE_RATE = createField("bytes_write_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.iops_read_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> IOPS_READ_RATE = createField("iops_read_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.iops_write_rate</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> IOPS_WRITE_RATE = createField("iops_write_rate", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.disk_offering_view.sort_key</code>. sort key used for customising sort method
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Integer> SORT_KEY = createField("sort_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.type</code>. inheritted by who?
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.disk_offering_view.display_offering</code>. Should disk offering be displayed to the end user
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Byte> DISPLAY_OFFERING = createField("display_offering", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.domain_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.Long> DOMAIN_ID = createField("domain_id", org.jooq.impl.SQLDataType.BIGINT.defaulted(true), this);

	/**
	 * The column <code>cloud.disk_offering_view.domain_uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> DOMAIN_UUID = createField("domain_uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.disk_offering_view.domain_name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> DOMAIN_NAME = createField("domain_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.disk_offering_view.domain_path</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.DiskOfferingViewRecord, java.lang.String> DOMAIN_PATH = createField("domain_path", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * Create a <code>cloud.disk_offering_view</code> table reference
	 */
	public DiskOfferingView() {
		super("disk_offering_view", org.apache.cloudstack.db.jooq.generated.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.disk_offering_view</code> table reference
	 */
	public DiskOfferingView(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.generated.Cloud.CLOUD, org.apache.cloudstack.db.jooq.generated.tables.DiskOfferingView.DISK_OFFERING_VIEW);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.generated.tables.DiskOfferingView as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.generated.tables.DiskOfferingView(alias);
	}
}
