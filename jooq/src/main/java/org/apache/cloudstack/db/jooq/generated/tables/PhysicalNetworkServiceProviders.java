/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhysicalNetworkServiceProviders extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord> {

	private static final long serialVersionUID = 404414809;

	/**
	 * The singleton instance of <code>cloud.physical_network_service_providers</code>
	 */
	public static final org.apache.cloudstack.db.jooq.generated.tables.PhysicalNetworkServiceProviders PHYSICAL_NETWORK_SERVICE_PROVIDERS = new org.apache.cloudstack.db.jooq.generated.tables.PhysicalNetworkServiceProviders();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord.class;
	}

	/**
	 * The column <code>cloud.physical_network_service_providers.id</code>. id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.physical_network_id</code>. id of the physical network
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Long> PHYSICAL_NETWORK_ID = createField("physical_network_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.provider_name</code>. Service Provider name
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.String> PROVIDER_NAME = createField("provider_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.state</code>. provider state
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.destination_physical_network_id</code>. id of the physical network to bridge to
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Long> DESTINATION_PHYSICAL_NETWORK_ID = createField("destination_physical_network_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.physical_network_service_providers.vpn_service_provided</code>. Is VPN service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> VPN_SERVICE_PROVIDED = createField("vpn_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.dhcp_service_provided</code>. Is DHCP service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> DHCP_SERVICE_PROVIDED = createField("dhcp_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.dns_service_provided</code>. Is DNS service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> DNS_SERVICE_PROVIDED = createField("dns_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.gateway_service_provided</code>. Is Gateway service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> GATEWAY_SERVICE_PROVIDED = createField("gateway_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.firewall_service_provided</code>. Is Firewall service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> FIREWALL_SERVICE_PROVIDED = createField("firewall_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.source_nat_service_provided</code>. Is Source NAT service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> SOURCE_NAT_SERVICE_PROVIDED = createField("source_nat_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.load_balance_service_provided</code>. Is LB service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> LOAD_BALANCE_SERVICE_PROVIDED = createField("load_balance_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.static_nat_service_provided</code>. Is Static NAT service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> STATIC_NAT_SERVICE_PROVIDED = createField("static_nat_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.port_forwarding_service_provided</code>. Is Port Forwarding service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> PORT_FORWARDING_SERVICE_PROVIDED = createField("port_forwarding_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.user_data_service_provided</code>. Is UserData service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> USER_DATA_SERVICE_PROVIDED = createField("user_data_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.security_group_service_provided</code>. Is SG service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> SECURITY_GROUP_SERVICE_PROVIDED = createField("security_group_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.networkacl_service_provided</code>. Is Network ACL service provided
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Byte> NETWORKACL_SERVICE_PROVIDED = createField("networkacl_service_provided", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.physical_network_service_providers.removed</code>. date removed if not null
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * Create a <code>cloud.physical_network_service_providers</code> table reference
	 */
	public PhysicalNetworkServiceProviders() {
		super("physical_network_service_providers", org.apache.cloudstack.db.jooq.generated.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.physical_network_service_providers</code> table reference
	 */
	public PhysicalNetworkServiceProviders(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.generated.Cloud.CLOUD, org.apache.cloudstack.db.jooq.generated.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.generated.Keys.IDENTITY_PHYSICAL_NETWORK_SERVICE_PROVIDERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.generated.Keys.KEY_PHYSICAL_NETWORK_SERVICE_PROVIDERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord>>asList(org.apache.cloudstack.db.jooq.generated.Keys.KEY_PHYSICAL_NETWORK_SERVICE_PROVIDERS_PRIMARY, org.apache.cloudstack.db.jooq.generated.Keys.KEY_PHYSICAL_NETWORK_SERVICE_PROVIDERS_UC_SERVICE_PROVIDERS__UUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.generated.tables.records.PhysicalNetworkServiceProvidersRecord, ?>>asList(org.apache.cloudstack.db.jooq.generated.Keys.FK_PNETWORK_SERVICE_PROVIDERS__PHYSICAL_NETWORK_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.generated.tables.PhysicalNetworkServiceProviders as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.generated.tables.PhysicalNetworkServiceProviders(alias);
	}
}
