/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NiciraNvpRouterMap extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord> {

	private static final long serialVersionUID = 217907163;

	/**
	 * The singleton instance of <code>cloud.nicira_nvp_router_map</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.NiciraNvpRouterMap NICIRA_NVP_ROUTER_MAP = new org.apache.cloudstack.db.jooq.tables.NiciraNvpRouterMap();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord.class;
	}

	/**
	 * The column <code>cloud.nicira_nvp_router_map.id</code>. id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.nicira_nvp_router_map.logicalrouter_uuid</code>. nicira uuid of logical router
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord, java.lang.String> LOGICALROUTER_UUID = createField("logicalrouter_uuid", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.nicira_nvp_router_map.network_id</code>. cloudstack id of the network
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord, java.lang.Long> NETWORK_ID = createField("network_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * Create a <code>cloud.nicira_nvp_router_map</code> table reference
	 */
	public NiciraNvpRouterMap() {
		super("nicira_nvp_router_map", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.nicira_nvp_router_map</code> table reference
	 */
	public NiciraNvpRouterMap(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.NiciraNvpRouterMap.NICIRA_NVP_ROUTER_MAP);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_NICIRA_NVP_ROUTER_MAP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_NICIRA_NVP_ROUTER_MAP_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_NICIRA_NVP_ROUTER_MAP_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_NICIRA_NVP_ROUTER_MAP_LOGICALROUTER_UUID, org.apache.cloudstack.db.jooq.Keys.KEY_NICIRA_NVP_ROUTER_MAP_NETWORK_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.NiciraNvpRouterMapRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_NICIRA_NVP_ROUTER_MAP__NETWORK_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.NiciraNvpRouterMap as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.NiciraNvpRouterMap(alias);
	}
}
