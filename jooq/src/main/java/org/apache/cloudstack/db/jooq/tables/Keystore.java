/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keystore extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord> {

	private static final long serialVersionUID = 1510961670;

	/**
	 * The singleton instance of <code>cloud.keystore</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.Keystore KEYSTORE = new org.apache.cloudstack.db.jooq.tables.Keystore();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord.class;
	}

	/**
	 * The column <code>cloud.keystore.id</code>. id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.keystore.name</code>. unique name for the certifiation
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this);

	/**
	 * The column <code>cloud.keystore.certificate</code>. the actual certificate being stored in the db
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.String> CERTIFICATE = createField("certificate", org.jooq.impl.SQLDataType.CLOB.length(65535).nullable(false), this);

	/**
	 * The column <code>cloud.keystore.key</code>. private key associated wih the certificate
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.length(65535), this);

	/**
	 * The column <code>cloud.keystore.domain_suffix</code>. DNS domain suffix associated with the certificate
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.String> DOMAIN_SUFFIX = createField("domain_suffix", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this);

	/**
	 * The column <code>cloud.keystore.seq</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.Integer> SEQ = createField("seq", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * Create a <code>cloud.keystore</code> table reference
	 */
	public Keystore() {
		super("keystore", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.keystore</code> table reference
	 */
	public Keystore(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.Keystore.KEYSTORE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_KEYSTORE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_KEYSTORE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.KeystoreRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_KEYSTORE_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_KEYSTORE_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.Keystore as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.Keystore(alias);
	}
}
