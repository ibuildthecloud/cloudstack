/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExternalLoadBalancerDevices extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord> {

	private static final long serialVersionUID = -311339450;

	/**
	 * The singleton instance of <code>cloud.external_load_balancer_devices</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.ExternalLoadBalancerDevices EXTERNAL_LOAD_BALANCER_DEVICES = new org.apache.cloudstack.db.jooq.tables.ExternalLoadBalancerDevices();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord.class;
	}

	/**
	 * The column <code>cloud.external_load_balancer_devices.id</code>. id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.physical_network_id</code>. id of the physical network in to which load balancer device is added
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Long> PHYSICAL_NETWORK_ID = createField("physical_network_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.provider_name</code>. Service Provider name corresponding to this load balancer device
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> PROVIDER_NAME = createField("provider_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.device_name</code>. name of the load balancer device
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> DEVICE_NAME = createField("device_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.capacity</code>. Capacity of the load balancer device
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Long> CAPACITY = createField("capacity", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.device_state</code>. state (enabled/disabled/shutdown) of the device
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> DEVICE_STATE = createField("device_state", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.allocation_state</code>. Allocation state (Free/Shared/Dedicated/Provider) of the device
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> ALLOCATION_STATE = createField("allocation_state", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.is_dedicated</code>. 1 if device/appliance is provisioned for dedicated use only
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Integer> IS_DEDICATED = createField("is_dedicated", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.is_managed</code>. 1 if load balancer appliance is provisioned and its life cycle is managed by by cloudstack
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Integer> IS_MANAGED = createField("is_managed", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.host_id</code>. host id coresponding to the external load balancer device
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Long> HOST_ID = createField("host_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.parent_host_id</code>. if the load balancer appliance is cloudstack managed, then host id on which this appliance is provisioned
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Long> PARENT_HOST_ID = createField("parent_host_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.is_gslb_provider</code>. 1 if load balancer appliance is acting as gslb service provider in the zone
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Integer> IS_GSLB_PROVIDER = createField("is_gslb_provider", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.gslb_site_publicip</code>. GSLB service Provider site public ip
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> GSLB_SITE_PUBLICIP = createField("gslb_site_publicip", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.external_load_balancer_devices.gslb_site_privateip</code>. GSLB service Provider site private ip
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.String> GSLB_SITE_PRIVATEIP = createField("gslb_site_privateip", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * Create a <code>cloud.external_load_balancer_devices</code> table reference
	 */
	public ExternalLoadBalancerDevices() {
		super("external_load_balancer_devices", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.external_load_balancer_devices</code> table reference
	 */
	public ExternalLoadBalancerDevices(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.ExternalLoadBalancerDevices.EXTERNAL_LOAD_BALANCER_DEVICES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_EXTERNAL_LOAD_BALANCER_DEVICES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_EXTERNAL_LOAD_BALANCER_DEVICES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_EXTERNAL_LOAD_BALANCER_DEVICES_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_EXTERNAL_LOAD_BALANCER_DEVICES_UUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.ExternalLoadBalancerDevicesRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_EXTERNAL_LB_DEVICES_PHYSICAL_NETWORK_ID, org.apache.cloudstack.db.jooq.Keys.FK_EXTERNAL_LB_DEVICES_HOST_ID, org.apache.cloudstack.db.jooq.Keys.FK_EXTERNAL_LB_DEVICES_PARENT_HOST_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.ExternalLoadBalancerDevices as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.ExternalLoadBalancerDevices(alias);
	}
}
