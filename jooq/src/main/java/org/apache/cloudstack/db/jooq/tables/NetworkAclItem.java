/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkAclItem extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord> {

	private static final long serialVersionUID = 525118001;

	/**
	 * The singleton instance of <code>cloud.network_acl_item</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.NetworkAclItem NETWORK_ACL_ITEM = new org.apache.cloudstack.db.jooq.tables.NetworkAclItem();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord.class;
	}

	/**
	 * The column <code>cloud.network_acl_item.id</code>. id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.network_acl_item.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.network_acl_item.acl_id</code>. network acl id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Long> ACL_ID = createField("acl_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.network_acl_item.start_port</code>. starting port of a port range
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Integer> START_PORT = createField("start_port", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.network_acl_item.end_port</code>. end port of a port range
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Integer> END_PORT = createField("end_port", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.network_acl_item.state</code>. current state of this rule
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.String> STATE = createField("state", org.jooq.impl.SQLDataType.CHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.network_acl_item.protocol</code>. protocol to open these ports for
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.String> PROTOCOL = createField("protocol", org.jooq.impl.SQLDataType.CHAR.length(16).nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.network_acl_item.created</code>. Date created
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.network_acl_item.icmp_code</code>. The ICMP code (if protocol=ICMP). A value of -1 means all codes for the given ICMP type.
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Integer> ICMP_CODE = createField("icmp_code", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.network_acl_item.icmp_type</code>. The ICMP type (if protocol=ICMP). A value of -1 means all types.
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Integer> ICMP_TYPE = createField("icmp_type", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.network_acl_item.traffic_type</code>. the traffic type of the rule, can be Ingress or Egress
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.String> TRAFFIC_TYPE = createField("traffic_type", org.jooq.impl.SQLDataType.CHAR.length(32), this);

	/**
	 * The column <code>cloud.network_acl_item.cidr</code>. comma seperated cidr list
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.String> CIDR = createField("cidr", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.network_acl_item.number</code>. priority number of the acl item
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this);

	/**
	 * The column <code>cloud.network_acl_item.action</code>. rule action, allow or deny
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.String> ACTION = createField("action", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this);

	/**
	 * Create a <code>cloud.network_acl_item</code> table reference
	 */
	public NetworkAclItem() {
		super("network_acl_item", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.network_acl_item</code> table reference
	 */
	public NetworkAclItem(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.NetworkAclItem.NETWORK_ACL_ITEM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_NETWORK_ACL_ITEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_NETWORK_ACL_ITEM_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_NETWORK_ACL_ITEM_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_NETWORK_ACL_ITEM_UC_NETWORK_ACL_ITEM__UUID, org.apache.cloudstack.db.jooq.Keys.KEY_NETWORK_ACL_ITEM_ACL_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.NetworkAclItemRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_NETWORK_ACL_ITEM__ACL_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.NetworkAclItem as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.NetworkAclItem(alias);
	}
}
