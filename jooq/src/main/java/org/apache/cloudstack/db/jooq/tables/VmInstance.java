/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VmInstance extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord> {

	private static final long serialVersionUID = -69060913;

	/**
	 * The singleton instance of <code>cloud.vm_instance</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.VmInstance VM_INSTANCE = new org.apache.cloudstack.db.jooq.tables.VmInstance();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord.class;
	}

	/**
	 * The column <code>cloud.vm_instance.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.vm_instance.instance_name</code>. name of the vm instance running on the hosts
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> INSTANCE_NAME = createField("instance_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.state</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.vm_template_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> VM_TEMPLATE_ID = createField("vm_template_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.guest_os_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> GUEST_OS_ID = createField("guest_os_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.private_mac_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> PRIVATE_MAC_ADDRESS = createField("private_mac_address", org.jooq.impl.SQLDataType.VARCHAR.length(17), this);

	/**
	 * The column <code>cloud.vm_instance.private_ip_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> PRIVATE_IP_ADDRESS = createField("private_ip_address", org.jooq.impl.SQLDataType.CHAR.length(40), this);

	/**
	 * The column <code>cloud.vm_instance.pod_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> POD_ID = createField("pod_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.data_center_id</code>. Data Center the instance belongs to
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> DATA_CENTER_ID = createField("data_center_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.host_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> HOST_ID = createField("host_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.last_host_id</code>. tentative host for first run or last host that it has been running on
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> LAST_HOST_ID = createField("last_host_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.proxy_id</code>. console proxy allocated in previous session
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> PROXY_ID = createField("proxy_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.proxy_assign_time</code>. time when console proxy was assigned
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.sql.Timestamp> PROXY_ASSIGN_TIME = createField("proxy_assign_time", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.vm_instance.vnc_password</code>. vnc password
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> VNC_PASSWORD = createField("vnc_password", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.ha_enabled</code>. Should HA be enabled for this VM
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Byte> HA_ENABLED = createField("ha_enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.limit_cpu_use</code>. Limit the cpu usage to service offering
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Byte> LIMIT_CPU_USE = createField("limit_cpu_use", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.update_count</code>. date state was updated
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> UPDATE_COUNT = createField("update_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.update_time</code>. date the destroy was requested
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.sql.Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.vm_instance.created</code>. date created
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.removed</code>. date removed if not null
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.vm_instance.type</code>. type of vm it is
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.vm_type</code>. vm type
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> VM_TYPE = createField("vm_type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.account_id</code>. user id of owner
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.domain_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> DOMAIN_ID = createField("domain_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.service_offering_id</code>. service offering id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> SERVICE_OFFERING_ID = createField("service_offering_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.vm_instance.reservation_id</code>. reservation id
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> RESERVATION_ID = createField("reservation_id", org.jooq.impl.SQLDataType.CHAR.length(40), this);

	/**
	 * The column <code>cloud.vm_instance.hypervisor_type</code>. hypervisor type
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> HYPERVISOR_TYPE = createField("hypervisor_type", org.jooq.impl.SQLDataType.CHAR.length(32), this);

	/**
	 * The column <code>cloud.vm_instance.disk_offering_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> DISK_OFFERING_ID = createField("disk_offering_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.cpu</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Integer> CPU = createField("cpu", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.vm_instance.ram</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> RAM = createField("ram", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.vm_instance.owner</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.vm_instance.speed</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Integer> SPEED = createField("speed", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.vm_instance.host_name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> HOST_NAME = createField("host_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.vm_instance.display_name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.vm_instance.desired_state</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> DESIRED_STATE = createField("desired_state", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.vm_instance.dynamically_scalable</code>. true if VM contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Byte> DYNAMICALLY_SCALABLE = createField("dynamically_scalable", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.display_vm</code>. Should vm instance be displayed to the end user
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Byte> DISPLAY_VM = createField("display_vm", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.power_state</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.String> POWER_STATE = createField("power_state", org.jooq.impl.SQLDataType.VARCHAR.length(74).defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.power_state_update_time</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.sql.Timestamp> POWER_STATE_UPDATE_TIME = createField("power_state_update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.vm_instance.power_state_update_count</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Integer> POWER_STATE_UPDATE_COUNT = createField("power_state_update_count", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this);

	/**
	 * The column <code>cloud.vm_instance.power_host</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, java.lang.Long> POWER_HOST = createField("power_host", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>cloud.vm_instance</code> table reference
	 */
	public VmInstance() {
		super("vm_instance", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.vm_instance</code> table reference
	 */
	public VmInstance(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.VmInstance.VM_INSTANCE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_VM_INSTANCE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_VM_INSTANCE_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_VM_INSTANCE_ID, org.apache.cloudstack.db.jooq.Keys.KEY_VM_INSTANCE_UC_VM_INSTANCE_UUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.VmInstanceRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_VM_INSTANCE__TEMPLATE_ID, org.apache.cloudstack.db.jooq.Keys.FK_VM_INSTANCE__HOST_ID, org.apache.cloudstack.db.jooq.Keys.FK_VM_INSTANCE__LAST_HOST_ID, org.apache.cloudstack.db.jooq.Keys.FK_VM_INSTANCE__ACCOUNT_ID, org.apache.cloudstack.db.jooq.Keys.FK_VM_INSTANCE__SERVICE_OFFERING_ID, org.apache.cloudstack.db.jooq.Keys.FK_VM_INSTANCE__POWER_HOST);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.VmInstance as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.VmInstance(alias);
	}
}
