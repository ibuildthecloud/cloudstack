/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoragePool extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord> {

	private static final long serialVersionUID = 672670209;

	/**
	 * The singleton instance of <code>cloud.storage_pool</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.StoragePool STORAGE_POOL = new org.apache.cloudstack.db.jooq.tables.StoragePool();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord.class;
	}

	/**
	 * The column <code>cloud.storage_pool.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.storage_pool.name</code>. should be NOT NULL
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.storage_pool.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.storage_pool.pool_type</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> POOL_TYPE = createField("pool_type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.storage_pool.port</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Integer> PORT = createField("port", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this);

	/**
	 * The column <code>cloud.storage_pool.data_center_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> DATA_CENTER_ID = createField("data_center_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.storage_pool.pod_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> POD_ID = createField("pod_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.storage_pool.cluster_id</code>. foreign key to cluster
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> CLUSTER_ID = createField("cluster_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.storage_pool.used_bytes</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> USED_BYTES = createField("used_bytes", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.storage_pool.capacity_bytes</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> CAPACITY_BYTES = createField("capacity_bytes", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.storage_pool.host_address</code>. FQDN or IP of storage server
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> HOST_ADDRESS = createField("host_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.storage_pool.user_info</code>. Authorization information for the storage pool. Used by network filesystems
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> USER_INFO = createField("user_info", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.storage_pool.path</code>. Filesystem path that is shared
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.storage_pool.created</code>. date the pool created
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.storage_pool.removed</code>. date removed if not null
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.storage_pool.update_time</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.sql.Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.storage_pool.status</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.storage_pool.storage_provider_name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> STORAGE_PROVIDER_NAME = createField("storage_provider_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.storage_pool.scope</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> SCOPE = createField("scope", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.storage_pool.hypervisor</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.String> HYPERVISOR = createField("hypervisor", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.storage_pool.managed</code>. Should CloudStack manage this storage
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Byte> MANAGED = createField("managed", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.storage_pool.capacity_iops</code>. IOPS CloudStack can provision from this storage pool
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> CAPACITY_IOPS = createField("capacity_iops", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * Create a <code>cloud.storage_pool</code> table reference
	 */
	public StoragePool() {
		super("storage_pool", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.storage_pool</code> table reference
	 */
	public StoragePool(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.StoragePool.STORAGE_POOL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_STORAGE_POOL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_STORAGE_POOL_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_STORAGE_POOL_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_STORAGE_POOL_ID, org.apache.cloudstack.db.jooq.Keys.KEY_STORAGE_POOL_ID_2, org.apache.cloudstack.db.jooq.Keys.KEY_STORAGE_POOL_UUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.StoragePoolRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_STORAGE_POOL__POD_ID, org.apache.cloudstack.db.jooq.Keys.FK_STORAGE_POOL__CLUSTER_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.StoragePool as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.StoragePool(alias);
	}
}
