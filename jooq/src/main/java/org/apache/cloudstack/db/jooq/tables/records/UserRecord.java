/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "user", schema = "cloud")
public class UserRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.tables.records.UserRecord> implements org.jooq.Record18<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.String, java.lang.String, java.lang.Byte, java.lang.Integer, java.lang.Integer> {

	private static final long serialVersionUID = 1319609905;

	/**
	 * Setter for <code>cloud.user.id</code>. 
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.user.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.user.uuid</code>. 
	 */
	public void setUuid(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.user.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", unique = true, length = 40)
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.user.username</code>. 
	 */
	public void setUsername(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.user.username</code>. 
	 */
	@javax.persistence.Column(name = "username", nullable = false, length = 255)
	public java.lang.String getUsername() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>cloud.user.password</code>. 
	 */
	public void setPassword(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.user.password</code>. 
	 */
	@javax.persistence.Column(name = "password", nullable = false, length = 255)
	public java.lang.String getPassword() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>cloud.user.account_id</code>. 
	 */
	public void setAccountId(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.user.account_id</code>. 
	 */
	@javax.persistence.Column(name = "account_id", nullable = false, precision = 20)
	public java.lang.Long getAccountId() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>cloud.user.firstname</code>. 
	 */
	public void setFirstname(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.user.firstname</code>. 
	 */
	@javax.persistence.Column(name = "firstname", length = 255)
	public java.lang.String getFirstname() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>cloud.user.lastname</code>. 
	 */
	public void setLastname(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.user.lastname</code>. 
	 */
	@javax.persistence.Column(name = "lastname", length = 255)
	public java.lang.String getLastname() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>cloud.user.email</code>. 
	 */
	public void setEmail(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cloud.user.email</code>. 
	 */
	@javax.persistence.Column(name = "email", length = 255)
	public java.lang.String getEmail() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>cloud.user.state</code>. 
	 */
	public void setState(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cloud.user.state</code>. 
	 */
	@javax.persistence.Column(name = "state", nullable = false, length = 10)
	public java.lang.String getState() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>cloud.user.api_key</code>. 
	 */
	public void setApiKey(java.lang.String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cloud.user.api_key</code>. 
	 */
	@javax.persistence.Column(name = "api_key", unique = true, length = 255)
	public java.lang.String getApiKey() {
		return (java.lang.String) getValue(9);
	}

	/**
	 * Setter for <code>cloud.user.secret_key</code>. 
	 */
	public void setSecretKey(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cloud.user.secret_key</code>. 
	 */
	@javax.persistence.Column(name = "secret_key", length = 255)
	public java.lang.String getSecretKey() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>cloud.user.created</code>. date created
	 */
	public void setCreated(java.sql.Timestamp value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cloud.user.created</code>. date created
	 */
	@javax.persistence.Column(name = "created", nullable = false)
	public java.sql.Timestamp getCreated() {
		return (java.sql.Timestamp) getValue(11);
	}

	/**
	 * Setter for <code>cloud.user.removed</code>. date removed
	 */
	public void setRemoved(java.sql.Timestamp value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>cloud.user.removed</code>. date removed
	 */
	@javax.persistence.Column(name = "removed")
	public java.sql.Timestamp getRemoved() {
		return (java.sql.Timestamp) getValue(12);
	}

	/**
	 * Setter for <code>cloud.user.timezone</code>. 
	 */
	public void setTimezone(java.lang.String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>cloud.user.timezone</code>. 
	 */
	@javax.persistence.Column(name = "timezone", length = 30)
	public java.lang.String getTimezone() {
		return (java.lang.String) getValue(13);
	}

	/**
	 * Setter for <code>cloud.user.registration_token</code>. 
	 */
	public void setRegistrationToken(java.lang.String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>cloud.user.registration_token</code>. 
	 */
	@javax.persistence.Column(name = "registration_token", length = 255)
	public java.lang.String getRegistrationToken() {
		return (java.lang.String) getValue(14);
	}

	/**
	 * Setter for <code>cloud.user.is_registered</code>. 1: yes, 0: no
	 */
	public void setIsRegistered(java.lang.Byte value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>cloud.user.is_registered</code>. 1: yes, 0: no
	 */
	@javax.persistence.Column(name = "is_registered", nullable = false, precision = 3)
	public java.lang.Byte getIsRegistered() {
		return (java.lang.Byte) getValue(15);
	}

	/**
	 * Setter for <code>cloud.user.incorrect_login_attempts</code>. 
	 */
	public void setIncorrectLoginAttempts(java.lang.Integer value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>cloud.user.incorrect_login_attempts</code>. 
	 */
	@javax.persistence.Column(name = "incorrect_login_attempts", nullable = false, precision = 10)
	public java.lang.Integer getIncorrectLoginAttempts() {
		return (java.lang.Integer) getValue(16);
	}

	/**
	 * Setter for <code>cloud.user.default</code>. 1 if user is default
	 */
	public void setDefault(java.lang.Integer value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>cloud.user.default</code>. 1 if user is default
	 */
	@javax.persistence.Column(name = "default", nullable = false, precision = 10)
	public java.lang.Integer getDefault() {
		return (java.lang.Integer) getValue(17);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record18 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row18<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.String, java.lang.String, java.lang.Byte, java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row18) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row18<java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.sql.Timestamp, java.lang.String, java.lang.String, java.lang.Byte, java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row18) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.ACCOUNT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.FIRSTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.LASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field10() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.API_KEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.SECRET_KEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field12() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field13() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field14() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.TIMEZONE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field15() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.REGISTRATION_TOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field16() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.IS_REGISTERED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field17() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.INCORRECT_LOGIN_ATTEMPTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field18() {
		return org.apache.cloudstack.db.jooq.tables.User.USER.DEFAULT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getAccountId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getFirstname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getLastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value10() {
		return getApiKey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return getSecretKey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value12() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value13() {
		return getRemoved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value14() {
		return getTimezone();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value15() {
		return getRegistrationToken();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value16() {
		return getIsRegistered();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value17() {
		return getIncorrectLoginAttempts();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value18() {
		return getDefault();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(org.apache.cloudstack.db.jooq.tables.User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(java.lang.Long id, java.lang.String uuid, java.lang.String username, java.lang.String password, java.lang.Long accountId, java.lang.String firstname, java.lang.String lastname, java.lang.String email, java.lang.String state, java.lang.String apiKey, java.lang.String secretKey, java.sql.Timestamp created, java.sql.Timestamp removed, java.lang.String timezone, java.lang.String registrationToken, java.lang.Byte isRegistered, java.lang.Integer incorrectLoginAttempts, java.lang.Integer default_) {
		super(org.apache.cloudstack.db.jooq.tables.User.USER);

		setValue(0, id);
		setValue(1, uuid);
		setValue(2, username);
		setValue(3, password);
		setValue(4, accountId);
		setValue(5, firstname);
		setValue(6, lastname);
		setValue(7, email);
		setValue(8, state);
		setValue(9, apiKey);
		setValue(10, secretKey);
		setValue(11, created);
		setValue(12, removed);
		setValue(13, timezone);
		setValue(14, registrationToken);
		setValue(15, isRegistered);
		setValue(16, incorrectLoginAttempts);
		setValue(17, default_);
	}
}
