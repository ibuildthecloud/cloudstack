/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VolumeStoreRef extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord> {

	private static final long serialVersionUID = -690601404;

	/**
	 * The singleton instance of <code>cloud.volume_store_ref</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.VolumeStoreRef VOLUME_STORE_REF = new org.apache.cloudstack.db.jooq.tables.VolumeStoreRef();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord.class;
	}

	/**
	 * The column <code>cloud.volume_store_ref.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.volume_store_ref.store_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.volume_store_ref.volume_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> VOLUME_ID = createField("volume_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.volume_store_ref.zone_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> ZONE_ID = createField("zone_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.volume_store_ref.created</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this);

	/**
	 * The column <code>cloud.volume_store_ref.last_updated</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.sql.Timestamp> LAST_UPDATED = createField("last_updated", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.volume_store_ref.job_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.download_pct</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Integer> DOWNLOAD_PCT = createField("download_pct", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.volume_store_ref.size</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> SIZE = createField("size", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.volume_store_ref.physical_size</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> PHYSICAL_SIZE = createField("physical_size", org.jooq.impl.SQLDataType.BIGINT.defaulted(true), this);

	/**
	 * The column <code>cloud.volume_store_ref.download_state</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> DOWNLOAD_STATE = createField("download_state", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.checksum</code>. checksum for the data disk
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> CHECKSUM = createField("checksum", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.error_str</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> ERROR_STR = createField("error_str", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.local_path</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> LOCAL_PATH = createField("local_path", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.install_path</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> INSTALL_PATH = createField("install_path", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.url</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.download_url</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> DOWNLOAD_URL = createField("download_url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.volume_store_ref.state</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.volume_store_ref.destroyed</code>. indicates whether the volume_host entry was destroyed by the user or not
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Byte> DESTROYED = createField("destroyed", org.jooq.impl.SQLDataType.TINYINT, this);

	/**
	 * The column <code>cloud.volume_store_ref.update_count</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> UPDATE_COUNT = createField("update_count", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.volume_store_ref.ref_cnt</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> REF_CNT = createField("ref_cnt", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.volume_store_ref.updated</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.sql.Timestamp> UPDATED = createField("updated", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * Create a <code>cloud.volume_store_ref</code> table reference
	 */
	public VolumeStoreRef() {
		super("volume_store_ref", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.volume_store_ref</code> table reference
	 */
	public VolumeStoreRef(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.VolumeStoreRef.VOLUME_STORE_REF);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_VOLUME_STORE_REF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_VOLUME_STORE_REF_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_VOLUME_STORE_REF_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.VolumeStoreRefRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_VOLUME_STORE_REF__STORE_ID, org.apache.cloudstack.db.jooq.Keys.FK_VOLUME_STORE_REF__VOLUME_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.VolumeStoreRef as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.VolumeStoreRef(alias);
	}
}
