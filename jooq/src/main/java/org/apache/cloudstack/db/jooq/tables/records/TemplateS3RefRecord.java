/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "template_s3_ref", schema = "cloud")
public class TemplateS3RefRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.tables.records.TemplateS3RefRecord> implements org.jooq.Record6<java.lang.Long, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.lang.Long, java.lang.Long> {

	private static final long serialVersionUID = 100928987;

	/**
	 * Setter for <code>cloud.template_s3_ref.id</code>. id
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.template_s3_ref.id</code>. id
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.template_s3_ref.s3_id</code>.  Associated S3 instance id
	 */
	public void setS3Id(java.lang.Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.template_s3_ref.s3_id</code>.  Associated S3 instance id
	 */
	@javax.persistence.Column(name = "s3_id", nullable = false, precision = 20)
	public java.lang.Long getS3Id() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>cloud.template_s3_ref.template_id</code>.  Associated template id
	 */
	public void setTemplateId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.template_s3_ref.template_id</code>.  Associated template id
	 */
	@javax.persistence.Column(name = "template_id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getTemplateId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>cloud.template_s3_ref.created</code>.  The creation timestamp
	 */
	public void setCreated(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.template_s3_ref.created</code>.  The creation timestamp
	 */
	@javax.persistence.Column(name = "created", nullable = false)
	public java.sql.Timestamp getCreated() {
		return (java.sql.Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>cloud.template_s3_ref.size</code>.  The size of the object
	 */
	public void setSize(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.template_s3_ref.size</code>.  The size of the object
	 */
	@javax.persistence.Column(name = "size", precision = 20)
	public java.lang.Long getSize() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>cloud.template_s3_ref.physical_size</code>.  The physical size of the object
	 */
	public void setPhysicalSize(java.lang.Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.template_s3_ref.physical_size</code>.  The physical size of the object
	 */
	@javax.persistence.Column(name = "physical_size", precision = 20)
	public java.lang.Long getPhysicalSize() {
		return (java.lang.Long) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.lang.Long, java.lang.Long> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Long, java.lang.Long, java.lang.Long, java.sql.Timestamp, java.lang.Long, java.lang.Long> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF.S3_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF.TEMPLATE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF.SIZE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field6() {
		return org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF.PHYSICAL_SIZE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getS3Id();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getTemplateId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getSize();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value6() {
		return getPhysicalSize();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TemplateS3RefRecord
	 */
	public TemplateS3RefRecord() {
		super(org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF);
	}

	/**
	 * Create a detached, initialised TemplateS3RefRecord
	 */
	public TemplateS3RefRecord(java.lang.Long id, java.lang.Long s3Id, java.lang.Long templateId, java.sql.Timestamp created, java.lang.Long size, java.lang.Long physicalSize) {
		super(org.apache.cloudstack.db.jooq.tables.TemplateS3Ref.TEMPLATE_S3_REF);

		setValue(0, id);
		setValue(1, s3Id);
		setValue(2, templateId);
		setValue(3, created);
		setValue(4, size);
		setValue(5, physicalSize);
	}
}
