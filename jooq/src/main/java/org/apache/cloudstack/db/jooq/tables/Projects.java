/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Projects extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord> {

	private static final long serialVersionUID = 154461210;

	/**
	 * The singleton instance of <code>cloud.projects</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.Projects PROJECTS = new org.apache.cloudstack.db.jooq.tables.Projects();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord.class;
	}

	/**
	 * The column <code>cloud.projects.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.projects.name</code>. project name
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.projects.uuid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.projects.display_text</code>. project name
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.String> DISPLAY_TEXT = createField("display_text", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.projects.project_account_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.Long> PROJECT_ACCOUNT_ID = createField("project_account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.projects.domain_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.Long> DOMAIN_ID = createField("domain_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.projects.created</code>. date created
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.projects.removed</code>. date removed
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.projects.state</code>. state of the project (Active/Inactive/Suspended)
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * Create a <code>cloud.projects</code> table reference
	 */
	public Projects() {
		super("projects", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.projects</code> table reference
	 */
	public Projects(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.Projects.PROJECTS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_PROJECTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_PROJECTS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_PROJECTS_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_PROJECTS_UC_PROJECTS__UUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.ProjectsRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_PROJECTS__PROJECT_ACCOUNT_ID, org.apache.cloudstack.db.jooq.Keys.FK_PROJECTS__DOMAIN_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.Projects as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.Projects(alias);
	}
}
