/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "service_offering", schema = "cloud")
public class ServiceOfferingRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.generated.tables.records.ServiceOfferingRecord> implements org.jooq.Record14<java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Short, java.lang.Short, java.lang.Byte, java.lang.Byte, java.lang.String, java.lang.Byte, java.lang.String, java.lang.Integer, java.lang.Byte, java.lang.String> {

	private static final long serialVersionUID = -299793692;

	/**
	 * Setter for <code>cloud.service_offering.id</code>. 
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.service_offering.cpu</code>. # of cores
	 */
	public void setCpu(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.cpu</code>. # of cores
	 */
	@javax.persistence.Column(name = "cpu", nullable = false, precision = 10)
	public java.lang.Integer getCpu() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>cloud.service_offering.speed</code>. speed per core in mhz
	 */
	public void setSpeed(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.speed</code>. speed per core in mhz
	 */
	@javax.persistence.Column(name = "speed", nullable = false, precision = 10)
	public java.lang.Integer getSpeed() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>cloud.service_offering.ram_size</code>. 
	 */
	public void setRamSize(java.lang.Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.ram_size</code>. 
	 */
	@javax.persistence.Column(name = "ram_size", nullable = false, precision = 20)
	public java.lang.Long getRamSize() {
		return (java.lang.Long) getValue(3);
	}

	/**
	 * Setter for <code>cloud.service_offering.nw_rate</code>. network rate throttle mbits/s
	 */
	public void setNwRate(java.lang.Short value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.nw_rate</code>. network rate throttle mbits/s
	 */
	@javax.persistence.Column(name = "nw_rate", precision = 5)
	public java.lang.Short getNwRate() {
		return (java.lang.Short) getValue(4);
	}

	/**
	 * Setter for <code>cloud.service_offering.mc_rate</code>. mcast rate throttle mbits/s
	 */
	public void setMcRate(java.lang.Short value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.mc_rate</code>. mcast rate throttle mbits/s
	 */
	@javax.persistence.Column(name = "mc_rate", precision = 5)
	public java.lang.Short getMcRate() {
		return (java.lang.Short) getValue(5);
	}

	/**
	 * Setter for <code>cloud.service_offering.ha_enabled</code>. Enable HA
	 */
	public void setHaEnabled(java.lang.Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.ha_enabled</code>. Enable HA
	 */
	@javax.persistence.Column(name = "ha_enabled", nullable = false, precision = 3)
	public java.lang.Byte getHaEnabled() {
		return (java.lang.Byte) getValue(6);
	}

	/**
	 * Setter for <code>cloud.service_offering.limit_cpu_use</code>. Limit the CPU usage to service offering
	 */
	public void setLimitCpuUse(java.lang.Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.limit_cpu_use</code>. Limit the CPU usage to service offering
	 */
	@javax.persistence.Column(name = "limit_cpu_use", nullable = false, precision = 3)
	public java.lang.Byte getLimitCpuUse() {
		return (java.lang.Byte) getValue(7);
	}

	/**
	 * Setter for <code>cloud.service_offering.host_tag</code>. host tag specified by the service_offering
	 */
	public void setHostTag(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.host_tag</code>. host tag specified by the service_offering
	 */
	@javax.persistence.Column(name = "host_tag", length = 255)
	public java.lang.String getHostTag() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>cloud.service_offering.default_use</code>. is this offering a default system offering
	 */
	public void setDefaultUse(java.lang.Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.default_use</code>. is this offering a default system offering
	 */
	@javax.persistence.Column(name = "default_use", nullable = false, precision = 3)
	public java.lang.Byte getDefaultUse() {
		return (java.lang.Byte) getValue(9);
	}

	/**
	 * Setter for <code>cloud.service_offering.vm_type</code>. type of offering specified for system offerings
	 */
	public void setVmType(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.vm_type</code>. type of offering specified for system offerings
	 */
	@javax.persistence.Column(name = "vm_type", length = 32)
	public java.lang.String getVmType() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>cloud.service_offering.sort_key</code>. sort key used for customising sort method
	 */
	public void setSortKey(java.lang.Integer value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.sort_key</code>. sort key used for customising sort method
	 */
	@javax.persistence.Column(name = "sort_key", nullable = false, precision = 10)
	public java.lang.Integer getSortKey() {
		return (java.lang.Integer) getValue(11);
	}

	/**
	 * Setter for <code>cloud.service_offering.is_volatile</code>. true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk
	 */
	public void setIsVolatile(java.lang.Byte value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.is_volatile</code>. true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk
	 */
	@javax.persistence.Column(name = "is_volatile", nullable = false, precision = 3)
	public java.lang.Byte getIsVolatile() {
		return (java.lang.Byte) getValue(12);
	}

	/**
	 * Setter for <code>cloud.service_offering.deployment_planner</code>. Planner heuristics used to deploy a VM of this offering; if null global config vm.deployment.planner is used
	 */
	public void setDeploymentPlanner(java.lang.String value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>cloud.service_offering.deployment_planner</code>. Planner heuristics used to deploy a VM of this offering; if null global config vm.deployment.planner is used
	 */
	@javax.persistence.Column(name = "deployment_planner", length = 255)
	public java.lang.String getDeploymentPlanner() {
		return (java.lang.String) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row14<java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Short, java.lang.Short, java.lang.Byte, java.lang.Byte, java.lang.String, java.lang.Byte, java.lang.String, java.lang.Integer, java.lang.Byte, java.lang.String> fieldsRow() {
		return (org.jooq.Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row14<java.lang.Long, java.lang.Integer, java.lang.Integer, java.lang.Long, java.lang.Short, java.lang.Short, java.lang.Byte, java.lang.Byte, java.lang.String, java.lang.Byte, java.lang.String, java.lang.Integer, java.lang.Byte, java.lang.String> valuesRow() {
		return (org.jooq.Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.CPU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.SPEED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field4() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.RAM_SIZE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field5() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.NW_RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field6() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.MC_RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field7() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.HA_ENABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field8() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.LIMIT_CPU_USE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.HOST_TAG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field10() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.DEFAULT_USE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.VM_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field12() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.SORT_KEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field13() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.IS_VOLATILE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field14() {
		return org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING.DEPLOYMENT_PLANNER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getCpu();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getSpeed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value4() {
		return getRamSize();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value5() {
		return getNwRate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value6() {
		return getMcRate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value7() {
		return getHaEnabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value8() {
		return getLimitCpuUse();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getHostTag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value10() {
		return getDefaultUse();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return getVmType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value12() {
		return getSortKey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value13() {
		return getIsVolatile();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value14() {
		return getDeploymentPlanner();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ServiceOfferingRecord
	 */
	public ServiceOfferingRecord() {
		super(org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING);
	}

	/**
	 * Create a detached, initialised ServiceOfferingRecord
	 */
	public ServiceOfferingRecord(java.lang.Long id, java.lang.Integer cpu, java.lang.Integer speed, java.lang.Long ramSize, java.lang.Short nwRate, java.lang.Short mcRate, java.lang.Byte haEnabled, java.lang.Byte limitCpuUse, java.lang.String hostTag, java.lang.Byte defaultUse, java.lang.String vmType, java.lang.Integer sortKey, java.lang.Byte isVolatile, java.lang.String deploymentPlanner) {
		super(org.apache.cloudstack.db.jooq.generated.tables.ServiceOffering.SERVICE_OFFERING);

		setValue(0, id);
		setValue(1, cpu);
		setValue(2, speed);
		setValue(3, ramSize);
		setValue(4, nwRate);
		setValue(5, mcRate);
		setValue(6, haEnabled);
		setValue(7, limitCpuUse);
		setValue(8, hostTag);
		setValue(9, defaultUse);
		setValue(10, vmType);
		setValue(11, sortKey);
		setValue(12, isVolatile);
		setValue(13, deploymentPlanner);
	}
}
