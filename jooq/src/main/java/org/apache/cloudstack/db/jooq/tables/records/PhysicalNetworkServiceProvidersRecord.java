/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "physical_network_service_providers", schema = "cloud")
public class PhysicalNetworkServiceProvidersRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.tables.records.PhysicalNetworkServiceProvidersRecord> implements org.jooq.Record19<java.lang.Long, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.Long, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.sql.Timestamp> {

	private static final long serialVersionUID = -1582122543;

	/**
	 * Setter for <code>cloud.physical_network_service_providers.id</code>. id
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.id</code>. id
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.uuid</code>. 
	 */
	public void setUuid(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", unique = true, length = 40)
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.physical_network_id</code>. id of the physical network
	 */
	public void setPhysicalNetworkId(java.lang.Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.physical_network_id</code>. id of the physical network
	 */
	@javax.persistence.Column(name = "physical_network_id", nullable = false, precision = 20)
	public java.lang.Long getPhysicalNetworkId() {
		return (java.lang.Long) getValue(2);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.provider_name</code>. Service Provider name
	 */
	public void setProviderName(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.provider_name</code>. Service Provider name
	 */
	@javax.persistence.Column(name = "provider_name", nullable = false, length = 255)
	public java.lang.String getProviderName() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.state</code>. provider state
	 */
	public void setState(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.state</code>. provider state
	 */
	@javax.persistence.Column(name = "state", nullable = false, length = 32)
	public java.lang.String getState() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.destination_physical_network_id</code>. id of the physical network to bridge to
	 */
	public void setDestinationPhysicalNetworkId(java.lang.Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.destination_physical_network_id</code>. id of the physical network to bridge to
	 */
	@javax.persistence.Column(name = "destination_physical_network_id", precision = 20)
	public java.lang.Long getDestinationPhysicalNetworkId() {
		return (java.lang.Long) getValue(5);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.vpn_service_provided</code>. Is VPN service provided
	 */
	public void setVpnServiceProvided(java.lang.Byte value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.vpn_service_provided</code>. Is VPN service provided
	 */
	@javax.persistence.Column(name = "vpn_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getVpnServiceProvided() {
		return (java.lang.Byte) getValue(6);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.dhcp_service_provided</code>. Is DHCP service provided
	 */
	public void setDhcpServiceProvided(java.lang.Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.dhcp_service_provided</code>. Is DHCP service provided
	 */
	@javax.persistence.Column(name = "dhcp_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getDhcpServiceProvided() {
		return (java.lang.Byte) getValue(7);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.dns_service_provided</code>. Is DNS service provided
	 */
	public void setDnsServiceProvided(java.lang.Byte value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.dns_service_provided</code>. Is DNS service provided
	 */
	@javax.persistence.Column(name = "dns_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getDnsServiceProvided() {
		return (java.lang.Byte) getValue(8);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.gateway_service_provided</code>. Is Gateway service provided
	 */
	public void setGatewayServiceProvided(java.lang.Byte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.gateway_service_provided</code>. Is Gateway service provided
	 */
	@javax.persistence.Column(name = "gateway_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getGatewayServiceProvided() {
		return (java.lang.Byte) getValue(9);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.firewall_service_provided</code>. Is Firewall service provided
	 */
	public void setFirewallServiceProvided(java.lang.Byte value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.firewall_service_provided</code>. Is Firewall service provided
	 */
	@javax.persistence.Column(name = "firewall_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getFirewallServiceProvided() {
		return (java.lang.Byte) getValue(10);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.source_nat_service_provided</code>. Is Source NAT service provided
	 */
	public void setSourceNatServiceProvided(java.lang.Byte value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.source_nat_service_provided</code>. Is Source NAT service provided
	 */
	@javax.persistence.Column(name = "source_nat_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getSourceNatServiceProvided() {
		return (java.lang.Byte) getValue(11);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.load_balance_service_provided</code>. Is LB service provided
	 */
	public void setLoadBalanceServiceProvided(java.lang.Byte value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.load_balance_service_provided</code>. Is LB service provided
	 */
	@javax.persistence.Column(name = "load_balance_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getLoadBalanceServiceProvided() {
		return (java.lang.Byte) getValue(12);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.static_nat_service_provided</code>. Is Static NAT service provided
	 */
	public void setStaticNatServiceProvided(java.lang.Byte value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.static_nat_service_provided</code>. Is Static NAT service provided
	 */
	@javax.persistence.Column(name = "static_nat_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getStaticNatServiceProvided() {
		return (java.lang.Byte) getValue(13);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.port_forwarding_service_provided</code>. Is Port Forwarding service provided
	 */
	public void setPortForwardingServiceProvided(java.lang.Byte value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.port_forwarding_service_provided</code>. Is Port Forwarding service provided
	 */
	@javax.persistence.Column(name = "port_forwarding_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getPortForwardingServiceProvided() {
		return (java.lang.Byte) getValue(14);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.user_data_service_provided</code>. Is UserData service provided
	 */
	public void setUserDataServiceProvided(java.lang.Byte value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.user_data_service_provided</code>. Is UserData service provided
	 */
	@javax.persistence.Column(name = "user_data_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getUserDataServiceProvided() {
		return (java.lang.Byte) getValue(15);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.security_group_service_provided</code>. Is SG service provided
	 */
	public void setSecurityGroupServiceProvided(java.lang.Byte value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.security_group_service_provided</code>. Is SG service provided
	 */
	@javax.persistence.Column(name = "security_group_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getSecurityGroupServiceProvided() {
		return (java.lang.Byte) getValue(16);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.networkacl_service_provided</code>. Is Network ACL service provided
	 */
	public void setNetworkaclServiceProvided(java.lang.Byte value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.networkacl_service_provided</code>. Is Network ACL service provided
	 */
	@javax.persistence.Column(name = "networkacl_service_provided", nullable = false, precision = 3)
	public java.lang.Byte getNetworkaclServiceProvided() {
		return (java.lang.Byte) getValue(17);
	}

	/**
	 * Setter for <code>cloud.physical_network_service_providers.removed</code>. date removed if not null
	 */
	public void setRemoved(java.sql.Timestamp value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>cloud.physical_network_service_providers.removed</code>. date removed if not null
	 */
	@javax.persistence.Column(name = "removed")
	public java.sql.Timestamp getRemoved() {
		return (java.sql.Timestamp) getValue(18);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record19 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row19<java.lang.Long, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.Long, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row19) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row19<java.lang.Long, java.lang.String, java.lang.Long, java.lang.String, java.lang.String, java.lang.Long, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.lang.Byte, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row19) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field3() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.PHYSICAL_NETWORK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.PROVIDER_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field6() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.DESTINATION_PHYSICAL_NETWORK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field7() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.VPN_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field8() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.DHCP_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field9() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.DNS_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field10() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.GATEWAY_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field11() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.FIREWALL_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field12() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.SOURCE_NAT_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field13() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.LOAD_BALANCE_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field14() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.STATIC_NAT_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field15() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.PORT_FORWARDING_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field16() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.USER_DATA_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field17() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.SECURITY_GROUP_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field18() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.NETWORKACL_SERVICE_PROVIDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field19() {
		return org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value3() {
		return getPhysicalNetworkId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getProviderName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value6() {
		return getDestinationPhysicalNetworkId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value7() {
		return getVpnServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value8() {
		return getDhcpServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value9() {
		return getDnsServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value10() {
		return getGatewayServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value11() {
		return getFirewallServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value12() {
		return getSourceNatServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value13() {
		return getLoadBalanceServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value14() {
		return getStaticNatServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value15() {
		return getPortForwardingServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value16() {
		return getUserDataServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value17() {
		return getSecurityGroupServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value18() {
		return getNetworkaclServiceProvided();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value19() {
		return getRemoved();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PhysicalNetworkServiceProvidersRecord
	 */
	public PhysicalNetworkServiceProvidersRecord() {
		super(org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS);
	}

	/**
	 * Create a detached, initialised PhysicalNetworkServiceProvidersRecord
	 */
	public PhysicalNetworkServiceProvidersRecord(java.lang.Long id, java.lang.String uuid, java.lang.Long physicalNetworkId, java.lang.String providerName, java.lang.String state, java.lang.Long destinationPhysicalNetworkId, java.lang.Byte vpnServiceProvided, java.lang.Byte dhcpServiceProvided, java.lang.Byte dnsServiceProvided, java.lang.Byte gatewayServiceProvided, java.lang.Byte firewallServiceProvided, java.lang.Byte sourceNatServiceProvided, java.lang.Byte loadBalanceServiceProvided, java.lang.Byte staticNatServiceProvided, java.lang.Byte portForwardingServiceProvided, java.lang.Byte userDataServiceProvided, java.lang.Byte securityGroupServiceProvided, java.lang.Byte networkaclServiceProvided, java.sql.Timestamp removed) {
		super(org.apache.cloudstack.db.jooq.tables.PhysicalNetworkServiceProviders.PHYSICAL_NETWORK_SERVICE_PROVIDERS);

		setValue(0, id);
		setValue(1, uuid);
		setValue(2, physicalNetworkId);
		setValue(3, providerName);
		setValue(4, state);
		setValue(5, destinationPhysicalNetworkId);
		setValue(6, vpnServiceProvided);
		setValue(7, dhcpServiceProvided);
		setValue(8, dnsServiceProvided);
		setValue(9, gatewayServiceProvided);
		setValue(10, firewallServiceProvided);
		setValue(11, sourceNatServiceProvided);
		setValue(12, loadBalanceServiceProvided);
		setValue(13, staticNatServiceProvided);
		setValue(14, portForwardingServiceProvided);
		setValue(15, userDataServiceProvided);
		setValue(16, securityGroupServiceProvided);
		setValue(17, networkaclServiceProvided);
		setValue(18, removed);
	}
}
