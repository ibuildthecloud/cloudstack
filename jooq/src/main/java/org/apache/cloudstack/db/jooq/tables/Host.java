/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Host extends org.jooq.impl.TableImpl<org.apache.cloudstack.db.jooq.tables.records.HostRecord> {

	private static final long serialVersionUID = -668420927;

	/**
	 * The singleton instance of <code>cloud.host</code>
	 */
	public static final org.apache.cloudstack.db.jooq.tables.Host HOST = new org.apache.cloudstack.db.jooq.tables.Host();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.apache.cloudstack.db.jooq.tables.records.HostRecord> getRecordType() {
		return org.apache.cloudstack.db.jooq.tables.records.HostRecord.class;
	}

	/**
	 * The column <code>cloud.host.id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.host.name</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this);

	/**
	 * The column <code>cloud.host.uuid</code>. this uuid is different with guid below, the later one is used by hypervisor resource
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(40), this);

	/**
	 * The column <code>cloud.host.status</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.host.type</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this);

	/**
	 * The column <code>cloud.host.private_ip_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PRIVATE_IP_ADDRESS = createField("private_ip_address", org.jooq.impl.SQLDataType.CHAR.length(40).nullable(false), this);

	/**
	 * The column <code>cloud.host.private_netmask</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PRIVATE_NETMASK = createField("private_netmask", org.jooq.impl.SQLDataType.VARCHAR.length(15), this);

	/**
	 * The column <code>cloud.host.private_mac_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PRIVATE_MAC_ADDRESS = createField("private_mac_address", org.jooq.impl.SQLDataType.VARCHAR.length(17), this);

	/**
	 * The column <code>cloud.host.storage_ip_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STORAGE_IP_ADDRESS = createField("storage_ip_address", org.jooq.impl.SQLDataType.CHAR.length(40), this);

	/**
	 * The column <code>cloud.host.storage_netmask</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STORAGE_NETMASK = createField("storage_netmask", org.jooq.impl.SQLDataType.VARCHAR.length(15), this);

	/**
	 * The column <code>cloud.host.storage_mac_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STORAGE_MAC_ADDRESS = createField("storage_mac_address", org.jooq.impl.SQLDataType.VARCHAR.length(17), this);

	/**
	 * The column <code>cloud.host.storage_ip_address_2</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STORAGE_IP_ADDRESS_2 = createField("storage_ip_address_2", org.jooq.impl.SQLDataType.CHAR.length(40), this);

	/**
	 * The column <code>cloud.host.storage_mac_address_2</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STORAGE_MAC_ADDRESS_2 = createField("storage_mac_address_2", org.jooq.impl.SQLDataType.VARCHAR.length(17), this);

	/**
	 * The column <code>cloud.host.storage_netmask_2</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> STORAGE_NETMASK_2 = createField("storage_netmask_2", org.jooq.impl.SQLDataType.VARCHAR.length(15), this);

	/**
	 * The column <code>cloud.host.cluster_id</code>. foreign key to cluster
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> CLUSTER_ID = createField("cluster_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.host.public_ip_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PUBLIC_IP_ADDRESS = createField("public_ip_address", org.jooq.impl.SQLDataType.CHAR.length(40), this);

	/**
	 * The column <code>cloud.host.public_netmask</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PUBLIC_NETMASK = createField("public_netmask", org.jooq.impl.SQLDataType.VARCHAR.length(15), this);

	/**
	 * The column <code>cloud.host.public_mac_address</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PUBLIC_MAC_ADDRESS = createField("public_mac_address", org.jooq.impl.SQLDataType.VARCHAR.length(17), this);

	/**
	 * The column <code>cloud.host.proxy_port</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Integer> PROXY_PORT = createField("proxy_port", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.host.data_center_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> DATA_CENTER_ID = createField("data_center_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.host.pod_id</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> POD_ID = createField("pod_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.host.cpus</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Integer> CPUS = createField("cpus", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.host.speed</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Integer> SPEED = createField("speed", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * The column <code>cloud.host.url</code>. iqn for the servers
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.host.fs_type</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> FS_TYPE = createField("fs_type", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.host.hypervisor_type</code>. hypervisor type, can be NONE for storage
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> HYPERVISOR_TYPE = createField("hypervisor_type", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.host.hypervisor_version</code>. hypervisor version
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> HYPERVISOR_VERSION = createField("hypervisor_version", org.jooq.impl.SQLDataType.VARCHAR.length(32), this);

	/**
	 * The column <code>cloud.host.ram</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> RAM = createField("ram", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.host.resource</code>. If it is a local resource, this is the class name
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> RESOURCE = createField("resource", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.host.version</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this);

	/**
	 * The column <code>cloud.host.parent</code>. parent path for the storage server
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> PARENT = createField("parent", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.host.total_size</code>. TotalSize
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> TOTAL_SIZE = createField("total_size", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.host.capabilities</code>. host capabilities in comma separated list
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> CAPABILITIES = createField("capabilities", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.host.guid</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> GUID = createField("guid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.host.available</code>. Is this host ready for more resources?
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Integer> AVAILABLE = createField("available", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.host.setup</code>. Is this host already setup?
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Integer> SETUP = createField("setup", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.host.dom0_memory</code>. memory used by dom0 for computing and routing servers
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> DOM0_MEMORY = createField("dom0_memory", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this);

	/**
	 * The column <code>cloud.host.last_ping</code>. time in seconds from the start of machine of the last ping
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Integer> LAST_PING = createField("last_ping", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this);

	/**
	 * The column <code>cloud.host.mgmt_server_id</code>. ManagementServer this host is connected to.
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> MGMT_SERVER_ID = createField("mgmt_server_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * The column <code>cloud.host.disconnected</code>. Time this was disconnected
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.sql.Timestamp> DISCONNECTED = createField("disconnected", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.host.created</code>. date the host first signed on
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.host.removed</code>. date removed if not null
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.sql.Timestamp> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.host.update_count</code>. atomic increase count making status update operation atomical
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> UPDATE_COUNT = createField("update_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.host.resource_state</code>. Is this host enabled for allocation for new resources
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> RESOURCE_STATE = createField("resource_state", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this);

	/**
	 * The column <code>cloud.host.owner</code>. 
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR.length(255), this);

	/**
	 * The column <code>cloud.host.lastUpdated</code>. last updated
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.sql.Timestamp> LASTUPDATED = createField("lastUpdated", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * The column <code>cloud.host.engine_state</code>. the engine state of the zone
	 */
	public final org.jooq.TableField<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.String> ENGINE_STATE = createField("engine_state", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false).defaulted(true), this);

	/**
	 * Create a <code>cloud.host</code> table reference
	 */
	public Host() {
		super("host", org.apache.cloudstack.db.jooq.Cloud.CLOUD);
	}

	/**
	 * Create an aliased <code>cloud.host</code> table reference
	 */
	public Host(java.lang.String alias) {
		super(alias, org.apache.cloudstack.db.jooq.Cloud.CLOUD, org.apache.cloudstack.db.jooq.tables.Host.HOST);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<org.apache.cloudstack.db.jooq.tables.records.HostRecord, java.lang.Long> getIdentity() {
		return org.apache.cloudstack.db.jooq.Keys.IDENTITY_HOST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.HostRecord> getPrimaryKey() {
		return org.apache.cloudstack.db.jooq.Keys.KEY_HOST_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.HostRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.apache.cloudstack.db.jooq.tables.records.HostRecord>>asList(org.apache.cloudstack.db.jooq.Keys.KEY_HOST_PRIMARY, org.apache.cloudstack.db.jooq.Keys.KEY_HOST_UC_HOST__UUID, org.apache.cloudstack.db.jooq.Keys.KEY_HOST_GUID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.HostRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.apache.cloudstack.db.jooq.tables.records.HostRecord, ?>>asList(org.apache.cloudstack.db.jooq.Keys.FK_HOST__CLUSTER_ID, org.apache.cloudstack.db.jooq.Keys.FK_HOST__POD_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.apache.cloudstack.db.jooq.tables.Host as(java.lang.String alias) {
		return new org.apache.cloudstack.db.jooq.tables.Host(alias);
	}
}
