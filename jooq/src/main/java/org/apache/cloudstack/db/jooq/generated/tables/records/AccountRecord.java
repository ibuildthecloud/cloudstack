/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "account", schema = "cloud")
public class AccountRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.generated.tables.records.AccountRecord> implements org.jooq.Record11<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Long, java.lang.String, java.sql.Timestamp, java.lang.Byte, java.lang.String, java.lang.Long, java.lang.Integer> {

	private static final long serialVersionUID = -627707283;

	/**
	 * Setter for <code>cloud.account.id</code>. 
	 */
	public void setId(java.lang.Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.account.id</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 20)
	public java.lang.Long getId() {
		return (java.lang.Long) getValue(0);
	}

	/**
	 * Setter for <code>cloud.account.account_name</code>. an account name set by the creator of the account, defaults to username for single accounts
	 */
	public void setAccountName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.account.account_name</code>. an account name set by the creator of the account, defaults to username for single accounts
	 */
	@javax.persistence.Column(name = "account_name", length = 100)
	public java.lang.String getAccountName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.account.uuid</code>. 
	 */
	public void setUuid(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.account.uuid</code>. 
	 */
	@javax.persistence.Column(name = "uuid", unique = true, length = 40)
	public java.lang.String getUuid() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>cloud.account.type</code>. 
	 */
	public void setType(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.account.type</code>. 
	 */
	@javax.persistence.Column(name = "type", nullable = false, precision = 10)
	public java.lang.Integer getType() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>cloud.account.domain_id</code>. 
	 */
	public void setDomainId(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.account.domain_id</code>. 
	 */
	@javax.persistence.Column(name = "domain_id", precision = 20)
	public java.lang.Long getDomainId() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>cloud.account.state</code>. 
	 */
	public void setState(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.account.state</code>. 
	 */
	@javax.persistence.Column(name = "state", nullable = false, length = 10)
	public java.lang.String getState() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>cloud.account.removed</code>. date removed
	 */
	public void setRemoved(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>cloud.account.removed</code>. date removed
	 */
	@javax.persistence.Column(name = "removed")
	public java.sql.Timestamp getRemoved() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>cloud.account.cleanup_needed</code>. 
	 */
	public void setCleanupNeeded(java.lang.Byte value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>cloud.account.cleanup_needed</code>. 
	 */
	@javax.persistence.Column(name = "cleanup_needed", nullable = false, precision = 3)
	public java.lang.Byte getCleanupNeeded() {
		return (java.lang.Byte) getValue(7);
	}

	/**
	 * Setter for <code>cloud.account.network_domain</code>. 
	 */
	public void setNetworkDomain(java.lang.String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>cloud.account.network_domain</code>. 
	 */
	@javax.persistence.Column(name = "network_domain", length = 255)
	public java.lang.String getNetworkDomain() {
		return (java.lang.String) getValue(8);
	}

	/**
	 * Setter for <code>cloud.account.default_zone_id</code>. 
	 */
	public void setDefaultZoneId(java.lang.Long value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>cloud.account.default_zone_id</code>. 
	 */
	@javax.persistence.Column(name = "default_zone_id", precision = 20)
	public java.lang.Long getDefaultZoneId() {
		return (java.lang.Long) getValue(9);
	}

	/**
	 * Setter for <code>cloud.account.default</code>. 1 if account is default
	 */
	public void setDefault(java.lang.Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>cloud.account.default</code>. 1 if account is default
	 */
	@javax.persistence.Column(name = "default", nullable = false, precision = 10)
	public java.lang.Integer getDefault() {
		return (java.lang.Integer) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Long> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Long, java.lang.String, java.sql.Timestamp, java.lang.Byte, java.lang.String, java.lang.Long, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Long, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Long, java.lang.String, java.sql.Timestamp, java.lang.Byte, java.lang.String, java.lang.Long, java.lang.Integer> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field1() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.ACCOUNT_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.DOMAIN_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.STATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.REMOVED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field8() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.CLEANUP_NEEDED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field9() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.NETWORK_DOMAIN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field10() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.DEFAULT_ZONE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field11() {
		return org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT.DEFAULT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getAccountName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getDomainId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getState();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getRemoved();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value8() {
		return getCleanupNeeded();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value9() {
		return getNetworkDomain();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value10() {
		return getDefaultZoneId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value11() {
		return getDefault();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AccountRecord
	 */
	public AccountRecord() {
		super(org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT);
	}

	/**
	 * Create a detached, initialised AccountRecord
	 */
	public AccountRecord(java.lang.Long id, java.lang.String accountName, java.lang.String uuid, java.lang.Integer type, java.lang.Long domainId, java.lang.String state, java.sql.Timestamp removed, java.lang.Byte cleanupNeeded, java.lang.String networkDomain, java.lang.Long defaultZoneId, java.lang.Integer default_) {
		super(org.apache.cloudstack.db.jooq.generated.tables.Account.ACCOUNT);

		setValue(0, id);
		setValue(1, accountName);
		setValue(2, uuid);
		setValue(3, type);
		setValue(4, domainId);
		setValue(5, state);
		setValue(6, removed);
		setValue(7, cleanupNeeded);
		setValue(8, networkDomain);
		setValue(9, defaultZoneId);
		setValue(10, default_);
	}
}
