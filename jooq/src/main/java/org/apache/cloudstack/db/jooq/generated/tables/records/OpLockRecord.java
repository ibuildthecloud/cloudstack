/**
 * This class is generated by jOOQ
 */
package org.apache.cloudstack.db.jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "op_lock", schema = "cloud")
public class OpLockRecord extends org.jooq.impl.UpdatableRecordImpl<org.apache.cloudstack.db.jooq.generated.tables.records.OpLockRecord> implements org.jooq.Record6<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.Integer> {

	private static final long serialVersionUID = -1094986967;

	/**
	 * Setter for <code>cloud.op_lock.key</code>. primary key of the table
	 */
	public void setKey(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>cloud.op_lock.key</code>. primary key of the table
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "key", unique = true, nullable = false, length = 128)
	public java.lang.String getKey() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>cloud.op_lock.mac</code>. management server id of the server that holds this lock
	 */
	public void setMac(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>cloud.op_lock.mac</code>. management server id of the server that holds this lock
	 */
	@javax.persistence.Column(name = "mac", nullable = false, length = 17)
	public java.lang.String getMac() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>cloud.op_lock.ip</code>. name of the thread that holds this lock
	 */
	public void setIp(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>cloud.op_lock.ip</code>. name of the thread that holds this lock
	 */
	@javax.persistence.Column(name = "ip", nullable = false, length = 40)
	public java.lang.String getIp() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>cloud.op_lock.thread</code>. Thread id that acquired this lock
	 */
	public void setThread(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>cloud.op_lock.thread</code>. Thread id that acquired this lock
	 */
	@javax.persistence.Column(name = "thread", nullable = false, length = 255)
	public java.lang.String getThread() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>cloud.op_lock.acquired_on</code>. Time acquired
	 */
	public void setAcquiredOn(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>cloud.op_lock.acquired_on</code>. Time acquired
	 */
	@javax.persistence.Column(name = "acquired_on", nullable = false)
	public java.sql.Timestamp getAcquiredOn() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>cloud.op_lock.waiters</code>. How many have the thread acquired this lock (reentrant)
	 */
	public void setWaiters(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>cloud.op_lock.waiters</code>. How many have the thread acquired this lock (reentrant)
	 */
	@javax.persistence.Column(name = "waiters", nullable = false, precision = 10)
	public java.lang.Integer getWaiters() {
		return (java.lang.Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.sql.Timestamp, java.lang.Integer> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK.KEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK.MAC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK.IP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK.THREAD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK.ACQUIRED_ON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK.WAITERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getKey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getMac();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getIp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getThread();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getAcquiredOn();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getWaiters();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OpLockRecord
	 */
	public OpLockRecord() {
		super(org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK);
	}

	/**
	 * Create a detached, initialised OpLockRecord
	 */
	public OpLockRecord(java.lang.String key, java.lang.String mac, java.lang.String ip, java.lang.String thread, java.sql.Timestamp acquiredOn, java.lang.Integer waiters) {
		super(org.apache.cloudstack.db.jooq.generated.tables.OpLock.OP_LOCK);

		setValue(0, key);
		setValue(1, mac);
		setValue(2, ip);
		setValue(3, thread);
		setValue(4, acquiredOn);
		setValue(5, waiters);
	}
}
